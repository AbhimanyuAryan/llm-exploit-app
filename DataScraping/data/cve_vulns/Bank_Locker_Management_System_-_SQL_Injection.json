{"source": "https://www.exploit-db.com/exploits/51751", "vulnName": "Bank Locker Management System - SQL Injection", "vulnEDBID": "51751", "vulnCVE": "N/A", "author": "SOSPIRO", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-01-29", "vulnContent": "# Exploit Title: Bank Locker Management System - SQL Injection\n# Application: Bank Locker Management System\n# Date: 12.09.2023\n# Bugs: SQL Injection \n# Exploit Author: SoSPiro\n# Vendor Homepage: https://phpgurukul.com/\n# Software Link: https://phpgurukul.com/bank-locker-management-system-using-php-and-mysql/\n# Tested on: Windows 10 64 bit Wampserver \n\n## Description:\nThis report highlights a critical SQL Injection vulnerability discovered in the \"Bank Locker Management System\" application. The vulnerability allows an attacker to bypass authentication and gain unauthorized access to the application.\n\n## Vulnerability Details:\n- **Application Name**: Bank Locker Management System\n- **Software Link**: [Download Link](https://phpgurukul.com/bank-locker-management-system-using-php-and-mysql/)\n- **Vendor Homepage**: [Vendor Homepage](https://phpgurukul.com/)\n\n## Vulnerability Description:\nThe SQL Injection vulnerability is present in the login mechanism of the application. By providing the following payload in the login and password fields:\n\nPayload: admin' or '1'='1-- -\n\nAn attacker can gain unauthorized access to the application with administrative privileges.\n\n## Proof of Concept (PoC):\n1. Visit the application locally at http://blms.local (assuming it's hosted on localhost).\n2. Navigate to the \"banker\" directory: http://blms.local/banker/\n3. In the login and password fields, input the following payload:\n4. admin' or '1'='1-- -\n            "}