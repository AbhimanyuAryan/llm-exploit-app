{"questionTitle": "Entity Framework rollback and remove bad migration", "question": "<p>I'm using EF 6.0 for my project in C# with manual migrations and updates. I have about 5 migrations on the database, but I realised that the last migration was bad and I don't want it. I know that I can rollback to a previous migration, but when I add a new (fixed) migration and run Update-Database, even the bad migration is applied.</p>\n\n<p>I was trying to rollback to the previous migration and delete the file with bad migration. But then, when I try to add new migration, I get error when updating database, because the migration file is corrupted (more specifically, first line of code rename the table A to B  and is next lines, EF is trying to update table with name A - maybe it is some EF bug).</p>\n\n<p>Is there some query I can run, which would tell EF something like \"Forget last migration like it never existed, it was bad\"? Something like Remove-Migration.</p>\n\n<p><strong>Edit1</strong>\nI found solution suited for me. Changing model to the good state and run <code>Add-Migration TheBadMigration -Force</code>. This will re-scaffold the last, not applied migration.</p>\n\n<p>Anyway, this still not answer the original question completely. If I UpdateDatabase to the bad migration, I did not found good way how to rollback and create new migration, excluding the bad one. </p>\n\n<p>Thanks</p>\n", "acceptedAnswer": "<p>You have 2 options: </p>\n\n<ul>\n<li><p>You can take the Down from the bad migration and put it in a new migration (you will also need to make the subsequent changes to the model). This is effectively rolling up to a better version. </p>\n\n<p><em>I use this option on things that have gone to multiple environments.</em></p></li>\n<li><p>The other option is to actually run <code>Update-Database \u2013TargetMigration: TheLastGoodMigration</code> against your deployed database and then delete the migration from your solution. This is kinda the hulk smash alternative and requires this to be performed against any database deployed with the bad version.</p>\n\n<p><strong>Note:</strong> to rescaffold the migration you can use <code>Add-Migration [existingname] -Force</code>. This will however overwrite your existing migration, so be sure to do this only if you have removed the existing migration from the database. This does the same thing as deleting the existing migration file and running <code>add-migration</code></p>\n\n<p><em>I use this option while developing.</em></p></li>\n</ul>\n", "questionSource": "https://stackoverflow.com/questions/22680446/entity-framework-rollback-and-remove-bad-migration"}