{"questionTitle": "Next.js revalidate (on-demand) with manual caching", "question": "<h3>Summary</h3>\n<p>NextJS has the neat feature called <a href=\"https://nextjs.org/docs/app/building-your-application/data-fetching/revalidating#on-demand-revalidation\" rel=\"nofollow noreferrer\">on-demand revalidation</a> which I would like to use, but I have an issue.</p>\n<p>I'm using Sanity as my CMS, and Sanity has their own client for fetching data. But how can I add a tag revalidation to Sanity, which doesn't use <code>fetch</code>?</p>\n<p>I was able to cache the data by wrapping my API functions in React's <code>cache</code> function, as recommended by <a href=\"https://nextjs.org/docs/app/building-your-application/data-fetching/caching#react-cache\" rel=\"nofollow noreferrer\">the documentation</a>.</p>\n<p>This is an example of one of said functions:</p>\n<pre class=\"lang-js prettyprint-override\"><code>// sanity/api.ts\n\nexport const getPosts = cache(\n  async (params?: GetPostsParams): Promise&lt;Post[]&gt; =&gt; {\n    const { labKey } = params || {};\n\n    const query = `...`;\n\n    const posts = await sanity.fetch(query);\n    return posts;\n  }\n);\n</code></pre>\n<p>Logically, I should be able to do something like this, but obviously these don't work:</p>\n<pre class=\"lang-js prettyprint-override\"><code>// sanity/api.ts\n\nexport const getPosts = cache(\n  async (params?: GetPostsParams): Promise&lt;Post[]&gt; =&gt; {\n    const { labKey } = params || {};\n\n    const query = `...`;\n\n    const posts = await sanity.fetch(query, { next: { tags: ['posts'] }); // this doesn't work\n    return posts;\n  }\n, { next: { tags: ['posts'] }); // this doesn't work either\n</code></pre>\n<p>PS: I'm using the new <code>/app</code> structure, if that is of any importance</p>\n", "acceptedAnswer": "<p>As of now, <code>@sanity/client</code> officially <a href=\"https://www.npmjs.com/package/@sanity/client#nextjs-app-router\" rel=\"nofollow noreferrer\">supports Nextjs' caching options</a>. I tested this and it works exactly just how a native <code>fetch</code> would work.</p>\n", "questionSource": "https://stackoverflow.com/questions/76482424/next-js-revalidate-on-demand-with-manual-caching"}