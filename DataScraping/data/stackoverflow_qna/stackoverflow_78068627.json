{"questionTitle": "QuestPDF does not save the PDF and does not open on a new tab", "question": "<p>Iam using QuestPDF in asp.net core web application.\nPDF is looking good and has everything it should.\nThe issue is it is not displaying in the browser but rather in acrobat reader or anything similar when I use .GeneratePdfAndShow()\nWhen I use .GeneratePdf() It does not show at all\nI need the document to be showed to the user preferably in a new tab as a PDF so they can print and move on inside the application</p>\n<p>The issue is I cannot call the Print() function from JS if I could I would just say on the success window.open _blank\nBut I need to call the Print() function from another action point Iam doing it like so:</p>\n<pre><code>  if (newKanbanItems.Any())\n {\n     List&lt;Object&gt; KanbanOBJS = new List&lt;Object&gt;();\n     foreach (var item in newKanbanItems) \n     {\n         int position = _db.ListContentCST.FirstOrDefault(x =&gt; x.LCCST_Id == item.KL_ListContentId).LCCST_Position;\n         Object KanbanOBJ = new\n         {\n             LCCST_Position = position,\n             PagodaPlace = item.KL_PagodaPlace,\n             Leadset = item.KL_Material,\n             QtyOfBundles = item.KL_QtyOfBundles\n         };\n         KanbanOBJS.Add(KanbanOBJ);\n     }\n     Print(area, userCST, name, KanbanOBJS);\n }\n</code></pre>\n<p>I need to call it from the Backend because I can than go thru a loop to get all of the objects I need to print:</p>\n<pre><code> // Inserting the Table right after the row\n column.Item()\n .PaddingTop(3)\n .Table(table =&gt;\n {\n     table.ColumnsDefinition(columns =&gt;\n     {\n         columns.RelativeColumn();\n         columns.RelativeColumn();\n         columns.RelativeColumn();\n         columns.RelativeColumn();\n         columns.RelativeColumn();\n     });\n     table.Header(header =&gt;\n     {\n         header.Cell()\n         .Border(6, unit: Unit.Mil)\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;LCCST_Position&quot;);\n         header.Cell()\n         .Border(6, unit: Unit.Mil)\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;Pagoda Place&quot;);\n         header.Cell()\n         .Border(6, unit: Unit.Mil)\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;Leadset&quot;);\n         header.Cell()\n         .Border(6, unit: Unit.Mil)\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;Quantity of Bundles&quot;);\n         header.Cell()\n         .Border(6, unit: Unit.Mil)\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;Commisioned?&quot;);\n     });\n     foreach (var item in KanbanOBJ)\n     {\n         dynamic obj = item;\n         table.Cell()\n         .AlignCenter()\n         .AlignMiddle()\n         .Text($&quot;{obj.LCCST_Position}&quot;);\n         table.Cell()\n         .AlignCenter()\n         .AlignMiddle()\n         .Text($&quot;{obj.PagodaPlace}&quot;);\n         table.Cell()\n         .AlignCenter()\n         .AlignMiddle()\n         .Text($&quot;{obj.Leadset}&quot;);\n         table.Cell()\n         .AlignCenter()\n         .AlignMiddle()\n         .Text($&quot;{obj.QtyOfBundles}&quot;);\n         table.Cell()\n         .AlignCenter()\n         .AlignMiddle()\n         .Text(&quot;&quot;);\n     }\n\n });\n</code></pre>\n<p>Does anyone have any workaround ?</p>\n<p>I tried every QuestPDF\n.Generate() methods\nI tried to ask ChatGPT about the issue and checked the QuestPDF documentation haven't found anything helpful</p>\n<p>The file cannot be saved locally it needs to be opened in the browser</p>\n", "acceptedAnswer": "<p>I have solved this issue via a few steps esentially im using blob to display the PDF in the frontend and im saving my PDF to base64String</p>\n<h1>Steps</h1>\n<h2>fetching my data back to the fronted:</h2>\n<pre><code>if (newKanbanItems.Any())\n{\n    List&lt;KanbanItem&gt; KanbanOBJS = new List&lt;KanbanItem&gt;();\n    foreach (var item in newKanbanItems)\n    {\n        int position = _db.ListContentCST.FirstOrDefault(x =&gt; x.LCCST_Id == item.KL_ListContentId).LCCST_Position;\n        KanbanItem KanbanOBJ = new()\n        {\n            LCCST_Position = position,\n            PagodaPlace = item.KL_PagodaPlace,\n            Leadset = item.KL_Material,\n            QtyOfBundles = item.KL_QtyOfBundles\n        };\n        KanbanOBJS.Add(KanbanOBJ);\n    }\n    return new JsonResult(new { success = true, message = listSaved, listId = name, KanbanOBJ = KanbanOBJS });\n</code></pre>\n<h2>Than I call a frontend function in my success that executes the print:</h2>\n<pre><code> success: function (result) {\n     if (result.success) {\n         displaySuccessMessage(result.message, &quot;&quot;);\n         listCSTTable.ajax.reload();\n\n         generateAndOpenPdf(result.listId, result.KanbanOBJ);\n         \n     }\n     else {\n         displayErrorMessage(result.message, &quot;&quot;);\n         listCSTTable.ajax.reload();\n     }\n }\n</code></pre>\n<h2>The PrintCall:</h2>\n<pre><code>function generateAndOpenPdf(listId, KanbanOBJ) {\n    var area = &quot;@area&quot;;\n    var userCST = &quot;@CSTUser&quot;;\n    var printUrl = &quot;@Url.Action(&quot;Print&quot;, &quot;ScannerCST&quot;)&quot;;\n\n    $.ajax({\n        type: &quot;POST&quot;,\n        url: printUrl,\n        data: JSON.stringify({ Area: area, User: userCST, ListId: listId, KanbanOBJ: KanbanOBJ }),\n        contentType: &quot;application/json; charset=utf-8&quot;,\n        success: function (result) {\n            if (result.success &amp;&amp; result.pdfBase64) {\n                var pdfData = atob(result.pdfBase64);\n                var arrayBuffer = new Uint8Array(pdfData.length);\n                for (var i = 0; i &lt; pdfData.length; i++) {\n                    arrayBuffer[i] = pdfData.charCodeAt(i);\n                }\n                var blob = new Blob([arrayBuffer], { type: &quot;application/pdf&quot; });\n                var url = URL.createObjectURL(blob);\n                window.open(url, '_blank');\n            } else {\n                console.error(&quot;PDF generation failed or no base64 string provided.&quot;);\n            }\n        },\n       \n    });\n}\n</code></pre>\n<h2>And finally I have changed the print to Generate the pdf into base64String and encode it in a success in the frontend:</h2>\n<pre><code>public async Task&lt;IActionResult&gt; Print([FromBody] PrintKanban model)\n\n{\n    QuestPDF.Settings.License = LicenseType.Community;\n    var stream = new MemoryStream();\n    Document.Create(document =&gt;\n    {\n        //Document creation here\n    }).GeneratePdf(stream);\n    stream.Position = 0;\n    var bytes = stream.ToArray();\n    var base64String = Convert.ToBase64String(bytes);\n\n    return Json(new { success = true, pdfBase64 = base64String });\n}\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/78068627/questpdf-does-not-save-the-pdf-and-does-not-open-on-a-new-tab"}