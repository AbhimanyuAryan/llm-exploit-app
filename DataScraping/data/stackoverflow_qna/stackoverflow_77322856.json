{"questionTitle": "Filter langchain vector database using as_retriever search_kwargs parameter", "question": "<p>How to <strong>filter a langchain vector database using search_kwargs parameter</strong> from the <em>as_retriever</em> function ?</p>\n<p>Here is an example of what I would like to do :</p>\n<pre class=\"lang-py prettyprint-override\"><code># Let\u00b4s say I have the following vector database\ndb = {'3c3bc745': Document(page_content=&quot;This is my text A&quot;, metadata={'Field_1': 'S', 'Field_2': 'R'}),\n        '14f84778': Document(page_content=&quot;This is my text B&quot;, metadata={'Field_1': 'S', 'Field_2': 'V'}),\n        'bd0022c9-449b': Document(page_content=&quot;This is my text C&quot;, metadata={'Field_1': 'Z', 'Field_2': 'V'})}\n\n\n# Filter the vector database\nretriever = db.as_retriever(search_kwargs={'filter': dict(Field_1='Z'), 'k': 1})\n\n# Create the conversationnal chain\nchain = ConversationalRetrievalChain.from_llm(llm=ChatOpenAI(temperature=0.0,\n                                                         model_name='gpt-3.5-turbo',\n                                                         deployment_id=&quot;chat&quot;),\n                                                        retriever=retriever)\n\nchat_history = []\nprompt = &quot;Which sentences do you have ?&quot;\n\n# Expect to get only &quot;This is my text C&quot; but I get also get the two other page_content elements\nchain({&quot;question&quot;: prompt, &quot;chat_history&quot;: chat_history}) \n</code></pre>\n", "acceptedAnswer": "<p>If you are using Datastax Astra/Cassandra as VectorDB it would be something like:</p>\n<pre><code>import cassio\ncassio.init(token=os.environ[&quot;ASTRA_DB_APPLICATION_TOKEN&quot;], database_id=os.environ[&quot;ASTRA_DB_ID&quot;])\n\nfrom langchain.vectorstores.cassandra import Cassandra\ntable_name = 'vs_investment_kb'\nkeyspace = 'demo'\n\nCassVectorStore = Cassandra(\n    session= cassio.config.resolve_session(),\n    keyspace= keyspace,\n    table_name= table_name,\n    embedding=embedding_generator\n)\n\nretrieverSim = CassVectorStore.as_retriever(\n    search_type='similarity',\n    search_kwargs={\n        'k': 4,\n        'filter': {&quot;source&quot;: file}\n    },\n)\n\n# Create a &quot;RetrievalQA&quot; chain\nchainSim = RetrievalQA.from_chain_type(\n    llm=llm,\n    retriever=retrieverSim,\n    chain_type_kwargs={\n        'prompt': PROMPT,\n        'document_variable_name': 'summaries'\n    }\n)\n# Run it and print results\nresponseSim = chainSim.run(QUERY)\nprint(responseSim)\n</code></pre>\n<p>Full example here: <a href=\"https://github.com/smatiolids/astra-agent-memory/blob/main/Explicando%20Retrieval%20Augmented%20Generation.ipynb\" rel=\"nofollow noreferrer\">https://github.com/smatiolids/astra-agent-memory/blob/main/Explicando%20Retrieval%20Augmented%20Generation.ipynb</a></p>\n", "questionSource": "https://stackoverflow.com/questions/77322856/filter-langchain-vector-database-using-as-retriever-search-kwargs-parameter"}