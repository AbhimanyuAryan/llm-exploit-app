{"questionTitle": "FastAPI serving static files through symlinks", "question": "<p>I have mounted the static directory in my FastAPI app using the following code:</p>\n<pre><code>from fastapi.staticfiles import StaticFiles\n\napp = FastAPI(\n    title=&quot;Title of the Application&quot;,\n    description=&quot;Over all description of the application&quot;)\napp.mount(&quot;/public&quot;, StaticFiles(directory='public'), name='public')\n</code></pre>\n<p>If I have a symlink pointing to a path outside the app folder, e.g.</p>\n<pre><code>/home/xyz/app/main.py\n/home/xyz/app/index.html\n/home/xyz/app/public/data -&gt; /home/xyz/static/whatever.tgz\n</code></pre>\n<p>The FastAPI application can recognize the URL <code>xyz.com/public/index.html</code>, but it can't recognize <code>xyz.com/public/data</code>.</p>\n<p>Is this doable? Unfortunately, I cannot use <code>FileResponse</code> due to the <code>blob</code> size being too large. I want to return the file with a simple link somehow.</p>\n", "acceptedAnswer": "<p>It is doable, as long as you mount a <a href=\"https://fastapi.tiangolo.com/tutorial/static-files/\" rel=\"nofollow noreferrer\"><code>StaticFiles</code></a> instance on that specific path as well. For example:</p>\n<pre class=\"lang-py prettyprint-override\"><code>app.mount(&quot;/static&quot;, StaticFiles(directory=&quot;static&quot;), name=&quot;static&quot;)\napp.mount(&quot;/symlink&quot;, StaticFiles(directory=&quot;static/data&quot;), name=&quot;publicsym&quot;)\n</code></pre>\n<p>Then, in your Jinja2 template you could request files as follows:</p>\n<pre class=\"lang-html prettyprint-override\"><code>&lt;link href=&quot;{{ url_for('static', path='/styles.css') }}&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;img src=&quot;{{ url_for('symlink', path='/image.png')}}&quot; width=&quot;50%&quot;&gt;\n</code></pre>\n<p>or, if there is an <code>images</code> sub-directory inside <code>data</code>:</p>\n<pre class=\"lang-html prettyprint-override\"><code>&lt;img src=&quot;{{ url_for('symlink', path='images/image.png')}}&quot; width=&quot;50%&quot;&gt;\n</code></pre>\n<h2>Update</h2>\n<p>Starlette has recently added the <a href=\"https://www.starlette.io/staticfiles/#staticfiles\" rel=\"nofollow noreferrer\"><code>follow_symlink</code> parameter in <code>StaticFiles</code></a> class, which is a boolean indicating if symbolic links for files and directories should be followed\u2014by default, this value is set to <code>False</code>. One could set this to <code>True</code>, and hence, every symbolic link in the directory path should be followed. Example:</p>\n<pre class=\"lang-py prettyprint-override\"><code>app.mount(&quot;/static&quot;, StaticFiles(directory=&quot;static&quot;, follow_symlink =True), name=&quot;static&quot;)\n</code></pre>\n<p>Given that there is a symlink called <code>data</code> in your <code>static</code> directory, you could then access <code>http://localhost:8000/static/data/image.png</code> directly from your browser, or in your Jinja2 template, you could request files as follows:</p>\n<pre class=\"lang-html prettyprint-override\"><code>&lt;img src=&quot;{{ url_for('static', path='data/image.png')}}&quot; width=&quot;50%&quot;&gt;\n</code></pre>\n<p>or, if there is an <code>images</code> sub-directory inside <code>data</code>:</p>\n<pre class=\"lang-html prettyprint-override\"><code>&lt;img src=&quot;{{ url_for('static', path='data/images/image.png')}}&quot; width=&quot;50%&quot;&gt;\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/70652701/fastapi-serving-static-files-through-symlinks"}