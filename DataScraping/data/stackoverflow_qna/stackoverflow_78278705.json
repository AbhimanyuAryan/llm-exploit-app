{"questionTitle": "How to select first N number of groups based on values of a column conditionally and groupby two columns?", "question": "<p>This is a follow up to this <a href=\"https://stackoverflow.com/questions/78278506/how-to-select-first-n-number-of-groups-based-on-values-of-a-column-conditionally#78278536\">post</a></p>\n<p>This is my DataFrame:</p>\n<pre><code>df = pd.DataFrame(\n    {\n        'a': [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 10, 22],\n        'b': [1, 1, 1, -1, -1, -1, -1, 2, 2, 2, 2, -1, -1, -1, -1],\n        'c': [25, 25, 25, 45, 45, 45, 45, 65, 65, 65, 65, 40, 40, 30, 30],\n        'main': ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y']\n    }\n)\n</code></pre>\n<p>Expected output: Groupby <code>main</code> AND <code>c</code>:</p>\n<pre><code>    a  b   c main\n0   10  1  25    x\n1   15  1  25    x\n2   20  1  25    x\n3   25 -1  45    x\n4   30 -1  45    x\n5   35 -1  45    x\n6   40 -1  45    x\n11  65 -1  40    y\n12  70 -1  40    y\n13  10 -1  30    y\n14  22 -1  30    y\n</code></pre>\n<p>The process is as follows: Note that <code>groupby</code> is done by TWO columns:</p>\n<p>So for each <code>main</code>:</p>\n<p><strong>a)</strong> Selecting the group that all of the <code>b</code> values is <code>1</code>. In my data and this <code>df</code> there is only one group with this condition.</p>\n<p><strong>b)</strong> Selecting first two groups (from top of <code>df</code>) that all of their <code>b</code> values are -1.</p>\n<p>Note that there is a possibility in my data that there are no groups that has <code>a</code> or <code>b</code> condition. If that is the case, returning whatever matches the criteria is fine. For example the output could be only one group or no groups at all.</p>\n<p>The groups that I want are shown below:</p>\n<p><a href=\"https://i.stack.imgur.com/ocygK.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ocygK.png\" alt=\"enter image description here\" /></a></p>\n<p>This is my attempt based on this <a href=\"https://stackoverflow.com/a/78278536/10200497\">answer</a> but it appears that something else must change:</p>\n<pre><code># identify groups with all 1\nm1 = df['b'].eq(1).groupby(df['c', 'main']).transform('all')\n# identify groups with all -1\nm2 = df['b'].eq(-1).groupby(df['c', 'main']).transform('all')\n# keep rows of first 2 groups with all -1\nm3 = df[['c', 'main']].isin(df.loc[m2, ['c', 'main']].unique()[:2])\n\n# select m1 OR m3\nout = df[m1 | m3]\n</code></pre>\n", "acceptedAnswer": "<p>You can update the previous code to get the first 2 unique &quot;c&quot; per main:</p>\n<pre><code>groups = [df['c'], df['main']]\n# identify groups with all 1\nm1 = df['b'].eq(1).groupby(groups).transform('all')\n# identify groups with all -1\nm2 = df['b'].eq(-1).groupby(groups).transform('all')\n# keep rows of first 2 groups with all -1, per main\nkeep = set.union(*df.loc[m2, ['c', 'main']].groupby('main')['c']\n                    .agg(lambda x: set(x.unique()[:2])))\n# {25}\nm3 = df['c'].isin(keep)\n\n# select m1 OR m3\nout = df[m1 | m3]\n</code></pre>\n<p>Or using a <code>merge</code>, but this won't necessarily keep the original order of the rows:</p>\n<pre><code>groups = [df['c'], df['main']]\n# identify groups with all 1\nm1 = df['b'].eq(1).groupby(groups).transform('all')\n# identify groups with all -1\nm2 = df['b'].eq(-1).groupby(groups).transform('all')\n# keep rows of first 2 groups with all -1, per main\nref = df.loc[m2, ['c', 'main']].drop_duplicates().groupby('main').head(2)\n\nout = pd.concat([df[m1], df.merge(ref)], ignore_index=True)\n</code></pre>\n<p>Output:</p>\n<pre><code>     a  b   c main\n0   10  1  25    x\n1   15  1  25    x\n2   20  1  25    x\n3   25 -1  45    x\n4   30 -1  45    x\n5   35 -1  45    x\n6   40 -1  45    x\n11  65 -1  40    y\n12  70 -1  40    y\n13  10 -1  30    y\n14  22 -1  30    y\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/78278705/how-to-select-first-n-number-of-groups-based-on-values-of-a-column-conditionally"}