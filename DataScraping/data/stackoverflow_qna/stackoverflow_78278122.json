{"questionTitle": "Postgrid Webhook not called laravel", "question": "<p>I'd like to set up a webhook for my Laravel application. I created a webhook that triggers on postcard creation and update events, but I'm consistently receiving error codes 419 or 405. Additionally, my Laravel logs don't show any incoming webhook requests, suggesting that my URL is never being called. This means my system isn't capturing the payload or processing the webhook event.</p>\n<p>Can you help me troubleshoot this issue?</p>\n", "acceptedAnswer": "<p>The error <code>405 - Method Not Allowed</code> means that you're trying to make a request to a resource using an unsupported HTTP verb.</p>\n<p>For example: postgrid may be trying to create a POST request to your webhook endpoint, but your webhook endpoint only supports the GET method, so you need to check the documentation of postgrid and see the correct HTTP verb to use with your webhook endpoint.</p>\n<p>Regarding the error <code>419 - Page Expired</code>, this error usually happens in Laravel due to a missing CSRF token that's not being sent alongside the request, so what you'll need to do here is to exclude the webhook endpoint from the CSRF check.</p>\n<p>The way to do this depends on your Laravel version:</p>\n<p><strong>Laravel 11.x:</strong> open the <code>bootstrap/app.php</code> file and call the <code>validateCsrfTokens()</code> method within the callback of the <code>withMiddleware()</code> method. This method accepts an array of strings where each string represents a route. These routes will be excluded from the CSRF check, here's how to do it:</p>\n<pre><code>&lt;?php\n\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    -&gt;withRouting(\n        web: __DIR__.'/../routes/web.php',\n        commands: __DIR__.'/../routes/console.php',\n        channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n    )\n    -&gt;withMiddleware(function (Middleware $middleware) {\n        $middleware-&gt;validateCsrfTokens(except: [\n            'you-webhook-endpoint/action-name'\n        ]);\n    })-&gt;create();\n</code></pre>\n<p><strong>Laravel 10.x (and older):</strong> There's a <code>VerifyCsrfToken</code> middleware within the <code>app/Http/Middleware</code> directory. This middleware has an <code>$except</code> property which you can use to specify endpoints that will be excluded from the CSRF check:</p>\n<pre><code>&lt;?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken as Middleware;\n\nclass VerifyCsrfToken extends Middleware\n{\n    /**\n     * The URIs that should be excluded from CSRF verification.\n     *\n     * @var array&lt;int, string&gt;\n     */\n    protected $except = [\n        'you-webhook-endpoint/action-name'\n    ];\n}\n</code></pre>\n<p><strong>Update:</strong> actually, there's a simpler solution: if you define the route of the webhook endpoint inside your <code>routes/api.php</code> file then you won't have to manually configure anything related to CSRF as API routes don't have this type of checks.</p>\n", "questionSource": "https://stackoverflow.com/questions/78278122/postgrid-webhook-not-called-laravel"}