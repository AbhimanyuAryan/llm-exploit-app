{"questionTitle": "How to fill minHeight or minWidth in SwiftUI", "question": "<p>Let's say I have the following layout:</p>\n<pre><code>VStack {\n  Text(title)\n    .frame(maxWidth: .infinity, alignment: .leading)\n\n  Spacer()\n\n  Divider()\n    .frame(height: 1)\n}\n.frame(minHeight: 80, alignment: .bottom)\n</code></pre>\n<p>I want the text field to expand freely, divider to be aligned to the bottom, and the whole thing to be at least 80 points tall (but not taller if not necessary). If I leave it like this the spacer will take up all of the parent's height (exceeding 80). If I don't have a spacer, both subviews will be aligned together to the top, bottom, or center.</p>\n<p>How can I achieve desired spacer behaviour? Or maybe the layout should be structured differently?</p>\n", "acceptedAnswer": "<p>You can create any views and observe their content height/width using PreferenceKey. Depending on your request you might use different conditions, for example in my piece of code - viewHeight:</p>\n<pre><code>struct ContentView: View {\n    var title = &quot;TitleTitleTitleTitle&quot;\n    @State private var textHeight: CGFloat = 0\n    var viewHeight: CGFloat {\n        if textHeight &lt; 80 {\n            return 80\n        } else {\n            return textHeight\n        }\n    }\n    var body: some View {\n        VStack {\n            Text(title)\n                .fixedSize(horizontal: false, vertical: true)\n                .frame(alignment: .leading)\n                .background(\n                    GeometryReader { geometry in\n                        Color.clear\n                            .preference(\n                                key: TextHeightKey.self,\n                                value: geometry.size.height\n                            )\n                    }\n                )\n            \n            Spacer()\n            \n            Divider()\n                .frame(height: 1)\n        }\n        .frame(height: viewHeight, alignment: .bottom)\n        .onPreferenceChange(TextHeightKey.self) { height in\n            textHeight = height\n        }\n    }\n}\n\nstruct TextHeightKey: PreferenceKey {\n    static var defaultValue: CGFloat = 0\n    \n    static func reduce(value: inout CGFloat, nextValue: () -&gt; CGFloat) {\n        value = max(value, nextValue())\n    }\n}\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/76573110/how-to-fill-minheight-or-minwidth-in-swiftui"}