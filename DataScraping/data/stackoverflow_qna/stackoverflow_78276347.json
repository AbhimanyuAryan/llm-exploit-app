{"questionTitle": "JsonPropertyAttribute PropertyName ignored by MongoDB", "question": "<p>I have a data model in a ASP.NET Core application running .NET 8, where the property names is defined with <code>JsonProperty(PropertyName = &quot;xxx&quot;)</code> attributes, like this:</p>\n<pre><code>[JsonProperty(PropertyName = &quot;enable_cancel_login&quot;)]\npublic bool EnableCancelLogin { get; set; }\n\n[JsonProperty(PropertyName = &quot;enable_create_user&quot;)]\npublic bool EnableCreateUser { get; set; }\n\n[JsonProperty(PropertyName = &quot;claim_transforms&quot;)]\npublic List&lt;OAuthClaimTransform&gt; ClaimTransforms { get; set; }\n\n[JsonProperty(PropertyName = &quot;title&quot;)]\npublic string Title { get; set; }\n</code></pre>\n<p>I know it is possible to define the element names with the MongoDB <code>[BsonElement(&quot;xxx&quot;)]</code> attribute, but I do not want to decorate all the properties in the model with one more attribute.</p>\n<p>How can I get MongoDB to use the <code>JsonPropertyAttribute</code>?</p>\n", "acceptedAnswer": "<p>You can implement the <code>JsonProperty</code> read functionality in a MongoDB <code>Convention</code>:</p>\n<pre><code>public class MongoDbJsonPropertyConvention : ConventionBase, IMemberMapConvention\n{\n    public void Apply(BsonMemberMap memberMap)\n    {\n        memberMap.SetElementName(GetElementName(memberMap) ?? memberMap.MemberName);\n    }\n\n    private string GetElementName(BsonMemberMap memberMap)\n    {\n        if (memberMap.MemberName != &quot;Id&quot;)\n        {\n            var jsonPropertyAtt = memberMap.MemberInfo.GetCustomAttribute&lt;JsonPropertyAttribute&gt;();\n            if (!string.IsNullOrEmpty(jsonPropertyAtt.PropertyName))\n            {\n                return jsonPropertyAtt.PropertyName;\n            }\n        }\n        return null;\n    }\n}\n</code></pre>\n<p>You should probably ignore the <code>Id</code> properties.</p>\n<p>Then, when creating the mongo client, you need to register the <code>MongoDbJsonPropertyConvention</code> in the <code>ConventionRegistry</code> :</p>\n<pre><code>var pack = new ConventionPack\n{\n  new IgnoreIfNullConvention(true),\n  new MongoDbJsonPropertyConvention()\n};\nConventionRegistry.Register(&quot;Read JsonProperty Attribute&quot;, pack, t =&gt; true);\n</code></pre>\n<p>The <code>t =&gt; true</code> is to make it global.</p>\n", "questionSource": "https://stackoverflow.com/questions/78276347/jsonpropertyattribute-propertyname-ignored-by-mongodb"}