{"questionTitle": "Use springboot 3.2.1(spring 6.1.2) , when didn&#39;t use `spring-boot-starter-parent` in maven, `@RequestParam` is Required?", "question": "<p>I used <code>springboot3.2.1</code> and <code>maven3.9.0</code> to create project, But i didn't used <code>spring-boot-starter-parent</code>, Instead use <code>spring-boot-dependencies</code> , I just want to manager my dependency, when i request a simple api, my server throw exception:</p>\n<p><code>Name for argument of type [java.lang.String] not specified, and parameter name information not available via reflection. Ensure that the compiler uses the '-parameters' flag.</code>.</p>\n<ul>\n<li><p>api request url :  <code>http://localhost:8080/user/hello?name=ddd</code></p>\n</li>\n<li><p>Error Java code:</p>\n</li>\n</ul>\n<pre class=\"lang-java prettyprint-override\"><code>@RestController\n@RequestMapping(&quot;/user&quot;)\npublic class UserController {\n    \n    @GetMapping(&quot;/hello&quot;)\n    public String hello(String name) {\n        return &quot;hello &quot; + name;\n    }\n}\n</code></pre>\n<ul>\n<li>Error maven <code>pom.xml</code> :</li>\n</ul>\n<pre class=\"lang-xml prettyprint-override\"><code>\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;3.2.1&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>\n<p>Now I and my friend find two way to fix it.</p>\n<ol>\n<li>add <code>@RequestParam(&quot;name&quot;)</code> to <code>String name</code> before, like:</li>\n</ol>\n<pre class=\"lang-java prettyprint-override\"><code>\n        @GetMapping(&quot;/hello&quot;)\n        public String hello(@RequestParam(&quot;name&quot;) String name) {\n            return &quot;hello &quot; + name;\n        }\n</code></pre>\n<ol start=\"2\">\n<li>use <code>spring-boot-starter-parent</code>, like:</li>\n</ol>\n<pre class=\"lang-xml prettyprint-override\"><code>    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.2.1&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n</code></pre>\n<p>I don't know if this is the Spring official expected result? Is this normal?</p>\n", "acceptedAnswer": "<p>The parent pom contains a configuration for the maven-compiler-plugin:</p>\n<pre><code>&lt;build&gt;\n  &lt;pluginManagement&gt;  \n    &lt;plugin&gt;\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n      &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n      &lt;configuration&gt;\n        &lt;parameters&gt;true&lt;/parameters&gt;\n      &lt;/configuration&gt;\n    &lt;/plugin&gt;\n</code></pre>\n<p>This makes sure the code is compiles with the <code>-parameters</code> flag, which makes the parameter name available at runtime.</p>\n<p>If you don't use the parent pom, you can also configure this in your own pom by adding the plugin configuration directly:</p>\n<pre><code>&lt;build&gt;\n  &lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n    &lt;configuration&gt;\n      &lt;parameters&gt;true&lt;/parameters&gt;\n    &lt;/configuration&gt;\n  &lt;/plugin&gt;\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/77847644/use-springboot-3-2-1spring-6-1-2-when-didnt-use-spring-boot-starter-parent"}