{"questionTitle": "seaborn plot in json format for front end", "question": "<p>I created a dummy plot by:</p>\n<pre><code>import seaborn as sns\nx=[10 ,20,30 ,40,50]\ny=[100,30,200,150,80]\nsns.barplot(x,y);\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/2X0sU.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/2X0sU.png\" alt=\"enter image description here\" /></a></p>\n<p>this is just an example.</p>\n<p>I am generating different graphs in seaborn, matplotlib, etc.</p>\n<p><strong>now the front end guy want the generated graph-images in json format, for customization</strong></p>\n<p>what should I do.</p>\n", "acceptedAnswer": "<p>JSON is a text format. There are two main options:</p>\n<ul>\n<li>Good one - send the raw values to frontend and use a plotting library to visualize it client-side.</li>\n<li>Okay one - render plot on the server and send image to frontend. <a href=\"https://frank.sauerburger.io/2020/06/17/serverside-matplotlib.html\" rel=\"nofollow noreferrer\">SSR example with Flask</a>.</li>\n</ul>\n<p>Client-side rendering allows for making interactive plots with zoom, highlights and whatnot. The result would be dynamic, and users like that. Examples of those libraries include <a href=\"https://d3js.org/\" rel=\"nofollow noreferrer\">D3.js</a>, <a href=\"https://plotly.com/javascript/\" rel=\"nofollow noreferrer\">Plotly</a>, <a href=\"https://www.highcharts.com/\" rel=\"nofollow noreferrer\">Highcharts</a>, <a href=\"https://developers.google.com/chart/\" rel=\"nofollow noreferrer\">Google Charts</a>, and many more.</p>\n<p>The approach would ideally depend on your use case. If you provide charts as parts of static content (think monthly blog posts reporting data), backend rendering and displaying plots as images would be okay. If your service focuses on continuously delivering data, frontend guy should really pick up the slack there.</p>\n<p>Anyroad, a variant on the server-side rendering is encoding the produced image in base64 and appending to the JSON response.\nI am not convinced it makes sense to not just fetch the image as file (mimetype=&quot;image/png&quot;) instead, but this is what <a href=\"https://matplotlib.org/stable/gallery/user_interfaces/web_application_server_sgskip.html\" rel=\"nofollow noreferrer\">matplotlib documentation</a> also suggests doing:</p>\n<pre><code>buf = BytesIO()\nfig.savefig(buf, format=&quot;png&quot;)\ndata = base64.b64encode(buf.getbuffer()).decode(&quot;ascii&quot;)\n</code></pre>\n<p>You can then return the encoded string with base64 representation (modern versions of Flask <code>jsonify</code> the response and add appropriate headers and status automagically):</p>\n<pre><code>return {&quot;plot&quot;: f&quot;data:image/png;base64,{data}&quot;, **dict_with_other_response_data}\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/74925937/seaborn-plot-in-json-format-for-front-end"}