{"questionTitle": "What causes GLSL recompilation of vertex shader based on state?", "question": "<p>I am using the <a href=\"https://registry.khronos.org/OpenGL/extensions/ARB/ARB_debug_output.txt\" rel=\"nofollow noreferrer\"><code>ARB_debug_output</code></a> extension. The driver gives me this warning:</p>\n<blockquote>\n<p>Program/shader state performance warning: Vertex shader in program 16 is being recompiled based on GL state.</p>\n</blockquote>\n<p>So, I tried setting various GL state before I compile my shader, including:</p>\n<ul>\n<li><code>GL_BLEND</code></li>\n<li><code>GL_CULL_FACE</code></li>\n<li><code>GL_DEPTH_TEST</code></li>\n<li>polygon-offset</li>\n<li>blendfunc</li>\n</ul>\n<p>...but it still recompiles upon first draw.</p>\n<p>What are the typical pieces of state that could cause the driver to recompile a vertex shader?</p>\n", "acceptedAnswer": "<p>I've run across this problem recently. It occurred that unbinding Vertex Array Objects caused this warning to appear. After deleting the lines with <code>glBindVertexArray(0)</code> the warning message disappeared.</p>\n", "questionSource": "https://stackoverflow.com/questions/57454921/what-causes-glsl-recompilation-of-vertex-shader-based-on-state"}