{"questionTitle": "Why a object of custom class can be the key of a dict, while the list can not in Python?", "question": "<pre><code>class MyClassA:\n    def __init__(self, value=0):\n        self.value = value\n\nclass MyClassB:\n    def __init__(self, value=0, list_=[]):\n        self.value = value\n        self.list = list_\n        \na = MyClassA()\nb = MyClassB()\nc = []\n\ndict_ = {}\ndict_[a] = 1 # No error\ndict_[b] = 1 # No error\ndict_[c] = 1 # TypeError: unhashable type: 'list'\n</code></pre>\n<ul>\n<li>Is the object of MyClassA / MyClassB immutable?</li>\n<li>list is also a kind of object. So why it becomes unhashable?\nI'm quite confused about it.</li>\n</ul>\n", "acceptedAnswer": "<p><a href=\"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict\" rel=\"nofollow noreferrer\">dict</a> keys need to be <strong>hashable</strong>, which requires implementing <code>__hash__</code> method.</p>\n<p>By default, objects implement id-based hash function. Hash has little meaning for mutable objects though, so it is removed from implementation of built-in classes of such types. You can do the same with custom classes by assigning None to the method:</p>\n<pre><code>class MyClassA:\n    def __init__(self, value=0):\n        self.value = value\n    __hash__ = None\ndict_[MyClassA()] = 1 # TypeError: unhashable type: 'MyClassA'\n</code></pre>\n<p>As to question 1 - no, you can change values of <code>A.value</code> and <code>B.value</code> and <code>B.list</code> so they are not immutable.</p>\n<p>Side notes:</p>\n<ol>\n<li>You probably shouldn't set list as default value of parameter - <a href=\"https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument\">&quot;Least Astonishment&quot; and the Mutable Default Argument</a></li>\n<li>Don't call your variables with names of built-ins, e.g <code>self.list</code>.</li>\n</ol>\n", "questionSource": "https://stackoverflow.com/questions/78278383/why-a-object-of-custom-class-can-be-the-key-of-a-dict-while-the-list-can-not-in"}