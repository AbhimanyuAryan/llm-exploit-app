{"questionTitle": "Can StateFlow have multiple collectors? Unable to understand the difference between StateFlow and SharedFlow", "question": "<p>Created below MutableStateFlow for understanding how collecting works using StateFlow. Is the below code valid? How we can right correctly?</p>\n<pre><code>val _mutableStateFlow = MutableStateFlow(0)\nval stateFlow: StateFlow = _mutableStateFlow\n\nlaunch {\n  stateFlow.collect { value -&gt;\n    println(&quot;Collector 1 received: $value&quot;)\n  }\n}\n\nlaunch {\n stateFlow.collect { value -&gt;\n   println(&quot;Collector 2 received: $value&quot;)\n }\n}\n\nlaunch {\n repeat(3) { i -&gt;\n   delay(2000)\n   mutableStateFlow.tryEmit(i)\n }\n}\n</code></pre>\n<p>Output -</p>\n<pre><code>Collector 1 received: 0\nCollector 2 received: 0\n</code></pre>\n<p>after 2 second</p>\n<pre><code>Collector 1 received: 1\nCollector 2 received: 1\n</code></pre>\n<p>after 2 second</p>\n<pre><code>Collector 1 received: 2\nCollector 2 received: 2\n</code></pre>\n<p>How collecting works with StateFlow and SharedFlow?</p>\n", "acceptedAnswer": "<p><code>StateFlow</code> is a specialised implementation of <code>SharedFlow</code>. And as a <code>SharedFlow</code> it can have multiple collectors and will share emitted values among the collectors.\n<code>StateFlow</code> always has a value and only emits a new value if it is different from the previous one.</p>\n<p>As per <a href=\"https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-state-flow/\" rel=\"nofollow noreferrer\">documentation</a>, <code>MutableStateFlow(initialValue)</code> is a shared flow with the following parameters::</p>\n<pre><code>val shared = MutableSharedFlow(\n    replay = 1,\n    onBufferOverflow = BufferOverflow.DROP_OLDEST\n)\nshared.tryEmit(initialValue) // emit the initial value\nval state = shared.distinctUntilChanged() // get StateFlow-like behavior\n</code></pre>\n", "questionSource": "https://stackoverflow.com/questions/78254230/can-stateflow-have-multiple-collectors-unable-to-understand-the-difference-betw"}